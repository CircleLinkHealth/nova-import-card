commands:
  01_update_composer:
    command: export HOME=/root && export COMPOSER_HOME=/root && /usr/bin/composer.phar self-update 1.0.0-alpha11

option_settings:
  - namespace: aws:elasticbeanstalk:application:environment
    option_name: HOME
    value: /root
  - namespace: aws:elasticbeanstalk:application:environment
    option_name: COMPOSER_HOME
    value: /public
  # Now setup the VPC that our EC2 instances should use
  - namespace: aws:ec2:vpc
    option_name: VPCId
    value: vpc-fffa179a
   # Now we setup a subnet for our VPC ec2 instances to use
  - namespace: aws:ec2:vpc
    option_name: Subnets
    value: subnet-080c2d4e
  - namespace: aws:elasticbeanstalk:container:php:phpini
    option_name: document_root
    value: /public

container_commands:
#  01-install_composer:
#    command: "curl -s http://getcomposer.org/installer | php"
#    cwd: "/var/app/ondeck"
#  02-install_dependencies:
#    command: "sudo php composer.phar install"
#    cwd: "/var/app/ondeck"
#  03-install_dependencies:
#    command: "sudo php composer self-update"
#    cwd: "/var/app/ondeck"
#  04-install_dependencies:
#    command: "sudo php composer update"
#    cwd: "/var/app/ondeck"
#  05-cleanup_composer:
#    command: "rm -Rf composer.*"
#    cwd: "/var/app/ondeck"
  06-create-env:
    command: "cat .ebextensions/env.txt.$SERVER > .env"
    cwd: "/var/app/ondeck"
#  08-artisan_migrate:
#    command: "php artisan key:generate"
#    cwd: "/var/app/ondeck"
#    leader_only: true
#  09-artisan_migrate:
#    command: "php artisan api-key:generate"
#    cwd: "/var/app/ondeck"
#    leader_only: true
  10-artisan_migrate:
    command: "php artisan migrate --force"
    cwd: "/var/app/ondeck"
    leader_only: true
#  11-artisan_seed:
#    command: "php artisan db:seed"
#    cwd: "/var/app/ondeck"
#    leader_only: true


files:
 "/etc/php.d/project.ini" :
   mode: "000644"
   owner: root
   group: root
   content: |
     max_file_uploads = 200