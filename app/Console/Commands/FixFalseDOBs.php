<?php

/*
 * This file is part of CarePlan Manager by CircleLink Health.
 */

namespace App\Console\Commands;

use App\Call;
use Carbon\Carbon;
use CircleLinkHealth\Customer\Entities\Patient;
use CircleLinkHealth\Customer\Entities\User;
use CircleLinkHealth\Eligibility\Entities\Enrollee;
use Illuminate\Console\Command;

class FixFalseDOBs extends Command
{
    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Fix DOB imported on current date';
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'fix:dob';
    
    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }
    
    /**
     * Execute the console command.
     *
     * @return mixed
     */
    public function handle()
    {
        $ids = [13724,13725,13726,13727,13728,13729,13730,13731,13733,13734,13735,13736,13738,13739,13740,13741,13742,13748,13749,13750,13751,13752,13753,13754,13755,13756,13757,13758,13759,13760,13761,13762,13763,13764,13765,13766,13767,13768,13769,13770,13771,13772,13773,13774,13775,13776,13777,13778,13780,13781,13782,13783,13784,13785,13787,13790,13791,13793,13794,13795,13797,13798,13799,13800,13801,13802,13803,13804,13807,13808,13809,13822,13823,13824,13825,13826,13827,13828,13829,13830,13831,13832,13836,13837,13838,13839,13840,13841,13843,13844,13846,13847,13848,13849,13850,13856,13858,13859,13860,13861,13862,13865,13866,13867,13868,13869,13871,13872,13873,13874,13875,13876,13879,13880,13881,13870,13884,13885,13886,13888,13889,13890,13891,13892,13893,13895,13896,13901,13902,13903,13904,13905,13907,13908,13909,13911,13913,13914,13917,13920,13922,13923,13924,13925,13930,13932,13934,13936,13937,13938,13940,13941,13942,13944,13945,13946,13949,13951,13952,13953,13959,13960,13961,13963,13965,13966,13967,13968,13969,13970,13971,13973,13979,13982,13984,13986,13989,13993,13994,13995,13935,13948,13878,13877,13900,14023,14024,14025,14029,14030,14032,14033,14034,14035,14036,14037,14038,14040,14041,14042,14043,14045,14046,14047,14049,14050,14052,14053,14054,14055,14056,14057,14058,13962,13977,13964,13958,13956,13981,13916,13975,14028,14028,13943,13842,14075,14077,14078,14080,14081,14082,14083,14084,14086,14088,14089,14091,14092,14093,14094,14095,14097,13863,13978,13894,13910,14026,14096,14096,13806,14085,14085,14079,14079,14079,14087,14087,13792,14090,14090,14121,14128,14129,14131,14133,14135,14136,14141,14146,14155,14031,14031,14031,13954,14127,14127,13931,14123,14123,13786,14144,14144,14125,14125,14134,14134,14153,14153,14039,14039,14039,14145,14145,14145,14132,14132,14149,14149,14137,14137,14147,14147,14130,14130,14150,14150,14048,14048,14157,14157,14051,14051,14142,14142,14126,14126,13955,14044,14044,14027,14027,13779,14138,14138,14124,14124,13950,14245,14264,14265,14267,14268,14284,14293,14345,14346,14347,14348,14350,14362,14363,14364,14373,14379,14382,14397,14402,13898,14242,14243,14244,14246,14247,14248,14249,14250,14251,14253,14254,14255,14256,14295,14257,14258,14259,14260,14261,14262,14266,14269,14270,14271,14280,14281,14283,14285,14288,14289,14292,14294,14297,14307,14298,14299,14303,14304,14308,14306,14310,14311,14312,14319,14320,14326,14327,14329,13983,13845,14340,14341,14344,14366,14366,14368,14375,14376,14377,14378,14384,14384,14383,14387,14388,14389,14390,14391,14392,14392,14393,14394,14395,14396,14398,14399,14406,14401,14403,14404,14405,14407,14420,14442,14445,14421,14423,14424,14425,14426,14427,14428,14457,14461,14462,14469,14430,14431,14432,14433,14434,14435,14436,14437,13987,14438,14439,14440,14441,14443,14444,14453,14454,14456,14458,14459,14460,14463,14464,14465,14466,14467,14468,14470,14471,14472,14473,14474,13919,13918,13897,13897,14491,14492,14505,14483,14484,14486,14485,14487,14488,14489,14490,14495,14496,14497,14498,14499,14500,14501,14502,14503,14504,14506,14359,14359,13974,13992,13864,13857,13737,14532,14530,14531,14545,14546,13972,14547,14548,14330,14330,14252,13887,13723,13796,13906,13991,13957,14148,14263,14263,14621,14624,14628,14631,14639,14640,14641,14642,14643,14644,14645,14646,14647,14648,14649,14650,14651,14652,14653,14654,14655,14656,14657,14658,14659,14422,14620,14622,14623,14625,14626,14627,14629,14630,14632,14634,14635,14636,14637,14638,14076,14076,13805,14723,14724,13985,13912,14282,14282,14633,14338,14338,14286,14286,13939,14797,14798,14799,14800,14802,14801,14803,14804,14279,14279,14278,14278,14290,14290,14339,14339,14342,14380,14287,14277,14143,14296,14140,14386,14321,14321,14328,14328,14151,14156,14139,14139,14385,13899,14322,14322,14309,14309,13988,13990,13980,14305,14305,14529,13976,14343,14302,14400,14429,14381,14152,14154];
        
        Patient::whereIn('id', $ids)->with('importedMedicalRecord')->chunkById(
            1000,
            function ($tmr) {
                $tmr->each(
                    function (Patient $patient) {
                        $e = Enrollee::whereMrn($patient->mrn_number)->with('eligibilityJob')->first();
    
                        $dob = Carbon::parse($e->eligibilityJob->data['dob']);
    
                        $mr = optional($patient->importedMedicalRecord)->medicalRecord();
                        if ($mr) {
                            if ($dob->gte(Carbon::createFromDate(2000, 1, 1))) {
                                $mr->dob = $dob->subYears(100)->toDateTimeString();
                                $mr->save();
                            }
                        }
                        
                        if ($dob->toDateString() != $patient->birth_date->toDateString()) {
                            $patient->birth_date = $dob;
                            
                            $patient->save();
                        }
    
                        if ($dob->toDateString() != $e->dob->toDateString()) {
                            $e->dob = $dob;
    
                            $e->save();
                        }
                        
                        $data = $e->eligibilityJob->data;
                        $data['dob'] = $dob->toDateString();
                        $e->eligibilityJob->data = $data;
                        $e->eligibilityJob->save();
                    }
                );
            }
        );
        
        $this->line('Command ran');
    }
}
