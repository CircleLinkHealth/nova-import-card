name: Vaporize
on:
  push:
jobs:
  deploy:
    name: Vaporize
    timeout-minutes: 30
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/development'
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check if commit message has [ci skip]
        uses: mstachniuk/ci-skip@v1

      - name: Turnstyle - run workflow only once
        if: ${{ env.CI_SKIP == 'false' }}
        uses: softprops/turnstyle@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.testing', '.env');"

      - name: Set staging S3 env variables - needed for vapor-cli
        if: github.ref != 'refs/heads/master'
        run: |
          echo "APP_NAME=provider" >> $GITHUB_ENV
          echo "ENV_TYPE=staging" >> $GITHUB_ENV
          echo "S3_SECRETS_BUCKET=${{ secrets.STAGING_S3_SECRETS_BUCKET }}" >> $GITHUB_ENV
          echo "S3_SECRETS_KEY=${{ secrets.STAGING_S3_SECRETS_KEY }}" >> $GITHUB_ENV
          echo "S3_SECRETS_SECRET=${{ secrets.STAGING_S3_SECRETS_SECRET }}" >> $GITHUB_ENV

      - name: Set production S3 env variables - needed for vapor-cli
        if: github.ref == 'refs/heads/master'
        run: |
          echo "APP_NAME=provider" >> $GITHUB_ENV
          echo "ENV_TYPE=production" >> $GITHUB_ENV
          echo "S3_SECRETS_BUCKET=${{ secrets.PRODUCTION_S3_SECRETS_BUCKET }}" >> $GITHUB_ENV
          echo "S3_SECRETS_KEY=${{ secrets.PRODUCTION_S3_SECRETS_KEY }}" >> $GITHUB_ENV
          echo "S3_SECRETS_SECRET=${{ secrets.PRODUCTION_S3_SECRETS_SECRET }}" >> $GITHUB_ENV

      - name: Set SSH key for npm install
        uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_PANGRATIOS }}

      - name: Install Composer dependencies
        if: ${{ env.CI_SKIP == 'false' }}
        uses: php-actions/composer@v5
        env:
          COMPOSER_MIRROR_PATH_REPOS: 1
        with:
          version: 1
          php_version: 7.4
          php_extensions: redis zip gd exif imagick opcache intl libxml pdo dom bcmath
          progress: yes
          dev: yes
          args: --classmap-authoritative --no-scripts

      - name: Setup PHP - need this to run vapor deploy
        if: ${{ env.CI_SKIP == 'false' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          tools: composer:v1
          extensions: redis, zip, gd, exif, imagick, opcache, intl, libxml, pdo, dom, bcmath
          coverage: none

      - name: Deploy
        if: ${{ env.CI_SKIP == 'false' }}
        run: ./vendor/bin/vapor deploy ${{ env.ENV_TYPE }} ${{ env.APP_ENV }} --commit="${{ github.sha }}"
        env:
          APP_ENV: ${{ github.ref == 'refs/heads/master' && 'production' || 'staging' }}
          VAPOR_API_TOKEN: ${{ secrets.VAPOR_API_TOKEN }}

      - name: Echo Job Status
        run: echo Job Status ${{ job.status }}

      - name: Notify Slack - Success
        if: ${{ env.CI_SKIP == 'false' && success()  }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: '#39C16C'
          SLACK_TITLE: Deployment successful for ${{ github.repository }}
          SLACK_MESSAGE: Workflow - ${{ github.workflow }}
          SLACK_USERNAME: kokos
          SLACK_ICON_EMOJI: ':suspect:'

      - name: Notify Slack - Failure
        if: ${{ env.CI_SKIP == 'false' && failure()  }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_COLOR: '#ff0033'
          SLACK_TITLE: Deployment failed for ${{ github.repository }}
          SLACK_MESSAGE: Workflow - ${{ github.workflow }}
          SLACK_USERNAME: kokos
          SLACK_ICON_EMOJI: ':scream_cat:'

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: ${{ env.CI_SKIP == 'false' && failure()  }}
        with:
          name: Logs
          path: ./storage/logs
