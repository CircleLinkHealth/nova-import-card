{"version":3,"sources":["bluebutton.min.js","material.min.js"],"names":[],"mappingsltIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.js","sourcesContent":["(function(root, factory) {\n    if(typeof exports === 'object') {\n        module.exports = factory();\n    }\n    else if(typeof define === 'function' && define.amd) {\n        define([], factory);\n    }\n    else {\n        root['BlueButton'] = factory();\n    }\n}(this, function() {\n\n/* BlueButton.js -- 0.4.2 */\n\n/*\n * ...\n */\n\n/* exported Core */\nvar Core = (function () {\n  \n  /*\n   * ...\n   */\n  var parseData = function (source) {\n    source = stripWhitespace(source);\n    \n    if (source.charAt(0) === '<') {\n      try {\n        return Core.XML.parse(source);\n      } catch (e) {\n        if (console.log) {\n          console.log(\"File looked like it might be XML but couldn't be parsed.\");\n        }\n      }\n    }\n\n    try {\n      return JSON.parse(source);\n    } catch (e) {\n      if (console.error) {\n        console.error(\"Error: Cannot parse this file. BB.js only accepts valid XML \" +\n          \"(for parsing) or JSON (for generation). If you are attempting to provide \" +\n          \"XML or JSON, please run your data through a validator to see if it is malformed.\\n\");\n      }\n      throw e;\n    }\n  };\n  \n  \n  /*\n   * Removes leading and trailing whitespace from a string\n   */\n  var stripWhitespace = function (str) {\n    if (!str) { return str; }\n    return str.replace(/^\\s+|\\s+$/g,'');\n  };\n  \n  \n  /*\n   * A wrapper around JSON.stringify which allows us to produce customized JSON.\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/\n   *        JavaScript/Guide/Using_native_JSON#The_replacer_parameter\n   * for documentation on the replacerFn.\n   */\n  var json = function () {\n\n    var datePad = function(number) {\n      if (number < 10) {\n        return '0' + number;\n      }\n      return number;\n    };\n    \n    var replacerFn = function(key, value) {\n      /* By default, Dates are output as ISO Strings like \"2014-01-03T08:00:00.000Z.\" This is\n       * tricky when all we have is a date (not a datetime); JS sadly ignores that distinction.\n       *\n       * To paper over this JS wart, we use two different JSON formats for dates and datetimes.\n       * This is a little ugly but makes sure that the dates/datetimes mostly just parse\n       * correclty for clients:\n       *\n       * 1. Datetimes are rendered as standard ISO strings, without the misleading millisecond\n       *    precision (misleading because we don't have it): YYYY-MM-DDTHH:mm:ssZ\n       * 2. Dates are rendered as MM/DD/YYYY. This ensures they are parsed as midnight local-time,\n       *    no matter what local time is, and therefore ensures the date is always correct.\n       *    Outputting \"YYYY-MM-DD\" would lead most browsers/node to assume midnight UTC, which\n       *    means \"2014-04-27\" suddenly turns into \"04/26/2014 at 5PM\" or just \"04/26/2014\"\n       *    if you format it as a date...\n       *\n       * See http://stackoverflow.com/questions/2587345/javascript-date-parse and\n       *     http://blog.dygraphs.com/2012/03/javascript-and-dates-what-mess.html\n       * for more on this issue.\n       */\n      var originalValue = this[key]; // a Date\n\n      if ( value && (originalValue instanceof Date) && !isNaN(originalValue.getTime()) ) {\n\n        // If while parsing we indicated that there was time-data specified, or if we see\n        // non-zero values in the hour/minutes/seconds/millis fields, output a datetime.\n        if (originalValue._parsedWithTimeData ||\n            originalValue.getHours() || originalValue.getMinutes() ||\n            originalValue.getSeconds() || originalValue.getMilliseconds()) {\n\n          // Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/\n          //    Reference/Global_Objects/Date/toISOString\n          return originalValue.getUTCFullYear() +\n            '-' + datePad( originalValue.getUTCMonth() + 1 ) +\n            '-' + datePad( originalValue.getUTCDate() ) +\n            'T' + datePad( originalValue.getUTCHours() ) +\n            ':' + datePad( originalValue.getUTCMinutes() ) +\n            ':' + datePad( originalValue.getUTCSeconds() ) +\n            'Z';\n        }\n        \n        // We just have a pure date\n        return datePad( originalValue.getMonth() + 1 ) +\n          '/' + datePad( originalValue.getDate() ) +\n          '/' + originalValue.getFullYear();\n\n      }\n\n      return value;\n    };\n    \n    return JSON.stringify(this, replacerFn, 2);\n  };\n  \n  \n  /*\n   * Removes all `null` properties from an object.\n   */\n  var trim = function (o) {\n    var y;\n    for (var x in o) {\n      if (o.hasOwnProperty(x)) {\n        y = o[x];\n        // if (y === null || (y instanceof Object && Object.keys(y).length == 0)) {\n        if (y === null) {\n          delete o[x];\n        }\n        if (y instanceof Object) y = trim(y);\n      }\n    }\n    return o;\n  };\n  \n  \n  return {\n    parseData: parseData,\n    stripWhitespace: stripWhitespace,\n    json: json,\n    trim: trim\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\nCore.Codes = (function () {\n  \n  /*\n   * Administrative Gender (HL7 V3)\n   * http://phinvads.cdc.gov/vads/ViewValueSet.action?id=8DE75E17-176B-DE11-9B52-0015173D1785\n   * OID: 2.16.840.1.113883.1.11.1\n   */\n  var GENDER_MAP = {\n    'F': 'female',\n    'M': 'male',\n    'UN': 'undifferentiated'\n  };\n  \n  /*\n   * Marital Status (HL7)\n   * http://phinvads.cdc.gov/vads/ViewValueSet.action?id=46D34BBC-617F-DD11-B38D-00188B398520\n   * OID: 2.16.840.1.114222.4.11.809\n   */\n  var MARITAL_STATUS_MAP = {\n    'N': 'annulled',\n    'C': 'common law',\n    'D': 'divorced',\n    'P': 'domestic partner',\n    'I': 'interlocutory',\n    'E': 'legally separated',\n    'G': 'living together',\n    'M': 'married',\n    'O': 'other',\n    'R': 'registered domestic partner',\n    'A': 'separated',\n    'S': 'single',\n    'U': 'unknown',\n    'B': 'unmarried',\n    'T': 'unreported',\n    'W': 'widowed'\n  };\n\n  /*\n   * Phone Types taken from HL7 Address Use\n   * https://www.hl7.org/fhir/v3/AddressUse/index.html\n   * OID: 2.16.840.1.113883.5.1119\n   */\n  var PHONE_MAP = {\n    'H': 'home',\n    'HP': 'home',\n    'MC': 'mobile',\n    'WP': 'work'\n  };\n\n  /*\n   * Religious Affiliation (HL7 V3)\n   * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=6BFDBFB5-A277-DE11-9B52-0015173D1785\n   * OID: 2.16.840.1.113883.5.1076\n   */\n  var RELIGION_MAP = {\n    \"1001\": \"adventist\",\n    \"1002\": \"african religions\",\n    \"1003\": \"afro-caribbean religions\",\n    \"1004\": \"agnosticism\",\n    \"1005\": \"anglican\",\n    \"1006\": \"animism\",\n    \"1061\": \"assembly of god\",\n    \"1007\": \"atheism\",\n    \"1008\": \"babi & baha'i faiths\",\n    \"1009\": \"baptist\",\n    \"1010\": \"bon\",\n    \"1062\": \"brethren\",\n    \"1011\": \"cao dai\",\n    \"1012\": \"celticism\",\n    \"1013\": \"christian (non-catholic, non-specific)\",\n    \"1063\": \"christian scientist\",\n    \"1064\": \"church of christ\",\n    \"1065\": \"church of god\",\n    \"1014\": \"confucianism\",\n    \"1066\": \"congregational\",\n    \"1015\": \"cyberculture religions\",\n    \"1067\": \"disciples of christ\",\n    \"1016\": \"divination\",\n    \"1068\": \"eastern orthodox\",\n    \"1069\": \"episcopalian\",\n    \"1070\": \"evangelical covenant\",\n    \"1017\": \"fourth way\",\n    \"1018\": \"free daism\",\n    \"1071\": \"friends\",\n    \"1072\": \"full gospel\",\n    \"1019\": \"gnosis\",\n    \"1020\": \"hinduism\",\n    \"1021\": \"humanism\",\n    \"1022\": \"independent\",\n    \"1023\": \"islam\",\n    \"1024\": \"jainism\",\n    \"1025\": \"jehovah's witnesses\",\n    \"1026\": \"judaism\",\n    \"1027\": \"latter day saints\",\n    \"1028\": \"lutheran\",\n    \"1029\": \"mahayana\",\n    \"1030\": \"meditation\",\n    \"1031\": \"messianic judaism\",\n    \"1073\": \"methodist\",\n    \"1032\": \"mitraism\",\n    \"1074\": \"native american\",\n    \"1075\": \"nazarene\",\n    \"1033\": \"new age\",\n    \"1034\": \"non-roman catholic\",\n    \"1035\": \"occult\",\n    \"1036\": \"orthodox\",\n    \"1037\": \"paganism\",\n    \"1038\": \"pentecostal\",\n    \"1076\": \"presbyterian\",\n    \"1039\": \"process, the\",\n    \"1077\": \"protestant\",\n    \"1078\": \"protestant, no denomination\",\n    \"1079\": \"reformed\",\n    \"1040\": \"reformed/presbyterian\",\n    \"1041\": \"roman catholic church\",\n    \"1080\": \"salvation army\",\n    \"1042\": \"satanism\",\n    \"1043\": \"scientology\",\n    \"1044\": \"shamanism\",\n    \"1045\": \"shiite (islam)\",\n    \"1046\": \"shinto\",\n    \"1047\": \"sikism\",\n    \"1048\": \"spiritualism\",\n    \"1049\": \"sunni (islam)\",\n    \"1050\": \"taoism\",\n    \"1051\": \"theravada\",\n    \"1081\": \"unitarian universalist\",\n    \"1052\": \"unitarian-universalism\",\n    \"1082\": \"united church of christ\",\n    \"1053\": \"universal life church\",\n    \"1054\": \"vajrayana (tibetan)\",\n    \"1055\": \"veda\",\n    \"1056\": \"voodoo\",\n    \"1057\": \"wicca\",\n    \"1058\": \"yaohushua\",\n    \"1059\": \"zen buddhism\",\n    \"1060\": \"zoroastrianism\"\n  };\n\n  /*\n   * Race & Ethnicity (HL7 V3)\n   * Full list at http://phinvads.cdc.gov/vads/ViewCodeSystem.action?id=2.16.840.1.113883.6.238\n   * OID: 2.16.840.1.113883.6.238\n   *\n   * Abbreviated list closer to real usage at: (Race / Ethnicity)\n   * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=67D34BBC-617F-DD11-B38D-00188B398520\n   * https://phinvads.cdc.gov/vads/ViewValueSet.action?id=35D34BBC-617F-DD11-B38D-00188B398520\n   */\n  var RACE_ETHNICITY_MAP = {\n    '2028-9': 'asian',\n    '2054-5': 'black or african american',\n    '2135-2': 'hispanic or latino',\n    '2076-8': 'native',\n    '2186-5': 'not hispanic or latino',\n    '2131-1': 'other',\n    '2106-3': 'white'\n  };\n\n  /*\n   * Role (HL7 V3)\n   * https://phinvads.cdc.gov/vads/ViewCodeSystem.action?id=2.16.840.1.113883.5.111\n   * OID: 2.16.840.1.113883.5.111\n   */\n  var ROLE_MAP = {\n    \"ACC\": \"accident site\",\n    \"ACHFID\":  \"accreditation location identifier\",\n    \"ACTMIL\":  \"active duty military\",\n    \"AGNT\": \"agent\",\n    \"ALL\": \"allergy clinic\",\n    \"AMB\": \"ambulance\",\n    \"AMPUT\":   \"amputee clinic\",\n    \"ANTIBIOT\":    \"antibiotic\",\n    \"ASSIST\":  \"assistive non-person living subject\",\n    \"AUNT\":    \"aunt\",\n    \"B\":   \"blind\",\n    \"BF\":  \"beef\",\n    \"BILL\":    \"billing contact\",\n    \"BIOTH\":   \"biotherapeutic non-person living subject\",\n    \"BL\":  \"broiler\",\n    \"BMTC\":    \"bone marrow transplant clinic\",\n    \"BMTU\":    \"bone marrow transplant unit\",\n    \"BR\":  \"breeder\",\n    \"BREAST\":  \"breast clinic\",\n    \"BRO\": \"brother\",\n    \"BROINLAW\":    \"brother-in-law\",\n    \"C\":   \"calibrator\",\n    \"CANC\": \"child and adolescent neurology clinic\",\n    \"CAPC\": \"child and adolescent psychiatry clinic\",\n    \"CARD\": \"ambulatory health care facilities; clinic/center; rehabilitation: cardiac facilities\",\n    \"CAREGIVER\": \"care giver\",\n    \"CAS\": \"asylum seeker\",\n    \"CASM\":    \"single minor asylum seeker\",\n    \"CATH\":    \"cardiac catheterization lab\",\n    \"CCO\": \"clinical companion\",\n    \"CCU\": \"coronary care unit\",\n    \"CHEST\":   \"chest unit\",\n    \"CHILD\":   \"child\",\n    \"CHLDADOPT\":   \"adopted child\",\n    \"CHLDFOST\":    \"foster child\",\n    \"CHLDINLAW\":   \"child in-law\",\n    \"CHR\": \"chronic care facility\",\n    \"CLAIM\":   \"claimant\",\n    \"CN\":  \"national\",\n    \"CNRP\":    \"non-country member without residence permit\",\n    \"CNRPM\":   \"non-country member minor without residence permit\",\n    \"CO\":  \"companion\",\n    \"COAG\":    \"coagulation clinic\",\n    \"COCBEN\":  \"continuity of coverage beneficiary\",\n    \"COMM\":    \"community location\",\n    \"COMMUNITYLABORATORY\": \"community laboratory\",\n    \"COUSN\":   \"cousin\",\n    \"CPCA\":    \"permit card applicant\",\n    \"CRIMEVIC\":    \"crime victim\",\n    \"CRP\": \"non-country member with residence permit\",\n    \"CRPM\":    \"non-country member minor with residence permit\",\n    \"CRS\": \"colon and rectal surgery clinic\",\n    \"CSC\": \"community service center\",\n    \"CVDX\":    \"cardiovascular diagnostics or therapeutics unit\",\n    \"DA\":  \"dairy\",\n    \"DADDR\":   \"delivery address\",\n    \"DAU\": \"natural daughter\",\n    \"DAUADOPT\":    \"adopted daughter\",\n    \"DAUC\":    \"daughter\",\n    \"DAUFOST\": \"foster daughter\",\n    \"DAUINLAW\":    \"daughter in-law\",\n    \"DC\":  \"therapeutic class\",\n    \"DEBR\":    \"debridement\",\n    \"DERM\":    \"dermatology clinic\",\n    \"DIFFABL\": \"differently abled\",\n    \"DOMPART\": \"domestic partner\",\n    \"DPOWATT\": \"durable power of attorney\",\n    \"DR\":  \"draft\",\n    \"DU\":  \"dual\",\n    \"DX\":  \"diagnostics or therapeutics unit\",\n    \"E\":   \"electronic qc\",\n    \"ECHO\":    \"echocardiography lab\",\n    \"ECON\":    \"emergency contact\",\n    \"ENDO\":    \"endocrinology clinic\",\n    \"ENDOS\":   \"endoscopy lab\",\n    \"ENROLBKR\":    \"enrollment broker\",\n    \"ENT\": \"otorhinolaryngology clinic\",\n    \"EPIL\":    \"epilepsy unit\",\n    \"ER\":  \"emergency room\",\n    \"ERL\": \"enrollment\",\n    \"ETU\": \"emergency trauma unit\",\n    \"EXCEST\":  \"executor of estate\",\n    \"EXT\": \"extended family member\",\n    \"F\":   \"filler proficiency\",\n    \"FAMDEP\":  \"family dependent\",\n    \"FAMMEMB\": \"family member\",\n    \"FI\":  \"fiber\",\n    \"FMC\": \"family medicine clinic\",\n    \"FRND\":    \"unrelated friend\",\n    \"FSTUD\":   \"full-time student\",\n    \"FTH\": \"father\",\n    \"FTHINLAW\":    \"father-in-law\",\n    \"FULLINS\": \"fully insured coverage sponsor\",\n    \"G\":   \"group\",\n    \"GACH\":    \"hospitals; general acute care hospital\",\n    \"GD\":  \"generic drug\",\n    \"GDF\": \"generic drug form\",\n    \"GDS\": \"generic drug strength\",\n    \"GDSF\":    \"generic drug strength form\",\n    \"GGRFTH\":  \"great grandfather\",\n    \"GGRMTH\":  \"great grandmother\",\n    \"GGRPRN\":  \"great grandparent\",\n    \"GI\":  \"gastroenterology clinic\",\n    \"GIDX\":    \"gastroenterology diagnostics or therapeutics lab\",\n    \"GIM\": \"general internal medicine clinic\",\n    \"GRFTH\":   \"grandfather\",\n    \"GRMTH\":   \"grandmother\",\n    \"GRNDCHILD\":   \"grandchild\",\n    \"GRNDDAU\": \"granddaughter\",\n    \"GRNDSON\": \"grandson\",\n    \"GRPRN\":   \"grandparent\",\n    \"GT\":  \"guarantor\",\n    \"GUADLTM\": \"guardian ad lidem\",\n    \"GUARD\":   \"guardian\",\n    \"GYN\": \"gynecology clinic\",\n    \"HAND\":    \"hand clinic\",\n    \"HANDIC\":  \"handicapped dependent\",\n    \"HBRO\":    \"half-brother\",\n    \"HD\":  \"hemodialysis unit\",\n    \"HEM\": \"hematology clinic\",\n    \"HLAB\":    \"hospital laboratory\",\n    \"HOMEHEALTH\":  \"home health\",\n    \"HOSP\":    \"hospital\",\n    \"HPOWATT\": \"healthcare power of attorney\",\n    \"HRAD\":    \"radiology unit\",\n    \"HSIB\":    \"half-sibling\",\n    \"HSIS\":    \"half-sister\",\n    \"HTN\": \"hypertension clinic\",\n    \"HU\":  \"hospital unit\",\n    \"HUSB\":    \"husband\",\n    \"HUSCS\":   \"specimen collection site\",\n    \"ICU\": \"intensive care unit\",\n    \"IEC\": \"impairment evaluation center\",\n    \"INDIG\":   \"member of an indigenous people\",\n    \"INFD\":    \"infectious disease clinic\",\n    \"INJ\": \"injured plaintiff\",\n    \"INJWKR\":  \"injured worker\",\n    \"INLAB\":   \"inpatient laboratory\",\n    \"INPHARM\": \"inpatient pharmacy\",\n    \"INV\": \"infertility clinic\",\n    \"JURID\":   \"jurisdiction location identifier\",\n    \"L\":   \"pool\",\n    \"LABORATORY\":  \"laboratory\",\n    \"LOCHFID\": \"local location identifier\",\n    \"LY\":  \"layer\",\n    \"LYMPH\":   \"lympedema clinic\",\n    \"MAUNT\":   \"maternalaunt\",\n    \"MBL\": \"medical laboratory\",\n    \"MCOUSN\":  \"maternalcousin\",\n    \"MGDSF\":   \"manufactured drug strength form\",\n    \"MGEN\":    \"medical genetics clinic\",\n    \"MGGRFTH\": \"maternalgreatgrandfather\",\n    \"MGGRMTH\": \"maternalgreatgrandmother\",\n    \"MGGRPRN\": \"maternalgreatgrandparent\",\n    \"MGRFTH\":  \"maternalgrandfather\",\n    \"MGRMTH\":  \"maternalgrandmother\",\n    \"MGRPRN\":  \"maternalgrandparent\",\n    \"MHSP\":    \"military hospital\",\n    \"MIL\": \"military\",\n    \"MOBL\":    \"mobile unit\",\n    \"MT\":  \"meat\",\n    \"MTH\": \"mother\",\n    \"MTHINLAW\":    \"mother-in-law\",\n    \"MU\":  \"multiplier\",\n    \"MUNCLE\":  \"maternaluncle\",\n    \"NBOR\":    \"neighbor\",\n    \"NBRO\":    \"natural brother\",\n    \"NCCF\":    \"nursing or custodial care facility\",\n    \"NCCS\":    \"neurology critical care and stroke unit\",\n    \"NCHILD\":  \"natural child\",\n    \"NEPH\":    \"nephrology clinic\",\n    \"NEPHEW\":  \"nephew\",\n    \"NEUR\":    \"neurology clinic\",\n    \"NFTH\":    \"natural father\",\n    \"NFTHF\":   \"natural father of fetus\",\n    \"NIECE\":   \"niece\",\n    \"NIENEPH\": \"niece/nephew\",\n    \"NMTH\":    \"natural mother\",\n    \"NOK\": \"next of kin\",\n    \"NPRN\":    \"natural parent\",\n    \"NS\":  \"neurosurgery unit\",\n    \"NSIB\":    \"natural sibling\",\n    \"NSIS\":    \"natural sister\",\n    \"O\":   \"operator proficiency\",\n    \"OB\":  \"obstetrics clinic\",\n    \"OF\":  \"outpatient facility\",\n    \"OMS\": \"oral and maxillofacial surgery clinic\",\n    \"ONCL\":    \"medical oncology clinic\",\n    \"OPH\": \"opthalmology clinic\",\n    \"OPTC\":    \"optometry clinic\",\n    \"ORG\": \"organizational contact\",\n    \"ORTHO\":   \"orthopedics clinic\",\n    \"OUTLAB\":  \"outpatient laboratory\",\n    \"OUTPHARM\":    \"outpatient pharmacy\",\n    \"P\":   \"patient\",\n    \"PAINCL\":  \"pain clinic\",\n    \"PATHOLOGIST\": \"pathologist\",\n    \"PAUNT\":   \"paternalaunt\",\n    \"PAYOR\":   \"payor contact\",\n    \"PC\":  \"primary care clinic\",\n    \"PCOUSN\":  \"paternalcousin\",\n    \"PEDC\":    \"pediatrics clinic\",\n    \"PEDCARD\": \"pediatric cardiology clinic\",\n    \"PEDE\":    \"pediatric endocrinology clinic\",\n    \"PEDGI\":   \"pediatric gastroenterology clinic\",\n    \"PEDHEM\":  \"pediatric hematology clinic\",\n    \"PEDHO\":   \"pediatric oncology clinic\",\n    \"PEDICU\":  \"pediatric intensive care unit\",\n    \"PEDID\":   \"pediatric infectious disease clinic\",\n    \"PEDNEPH\": \"pediatric nephrology clinic\",\n    \"PEDNICU\": \"pediatric neonatal intensive care unit\",\n    \"PEDRHEUM\":    \"pediatric rheumatology clinic\",\n    \"PEDU\":    \"pediatric unit\",\n    \"PGGRFTH\": \"paternalgreatgrandfather\",\n    \"PGGRMTH\": \"paternalgreatgrandmother\",\n    \"PGGRPRN\": \"paternalgreatgrandparent\",\n    \"PGRFTH\":  \"paternalgrandfather\",\n    \"PGRMTH\":  \"paternalgrandmother\",\n    \"PGRPRN\":  \"paternalgrandparent\",\n    \"PH\":  \"policy holder\",\n    \"PHARM\":   \"pharmacy\",\n    \"PHLEBOTOMIST\":    \"phlebotomist\",\n    \"PHU\": \"psychiatric hospital unit\",\n    \"PL\":  \"pleasure\",\n    \"PLS\": \"plastic surgery clinic\",\n    \"POD\": \"podiatry clinic\",\n    \"POWATT\":  \"power of attorney\",\n    \"PRC\": \"pain rehabilitation center\",\n    \"PREV\":    \"preventive medicine clinic\",\n    \"PRN\": \"parent\",\n    \"PRNINLAW\":    \"parent in-law\",\n    \"PROCTO\":  \"proctology clinic\",\n    \"PROFF\":   \"provider's office\",\n    \"PROG\":    \"program eligible\",\n    \"PROS\":    \"prosthodontics clinic\",\n    \"PRS\": \"personal relationship\",\n    \"PSI\": \"psychology clinic\",\n    \"PSTUD\":   \"part-time student\",\n    \"PSY\": \"psychiatry clinic\",\n    \"PSYCHF\":  \"psychiatric care facility\",\n    \"PT\":  \"patient\",\n    \"PTRES\":   \"patient's residence\",\n    \"PUNCLE\":  \"paternaluncle\",\n    \"Q\":   \"quality control\",\n    \"R\":   \"replicate\",\n    \"RADDX\":   \"radiology diagnostics or therapeutics unit\",\n    \"RADO\":    \"radiation oncology unit\",\n    \"RC\":  \"racing\",\n    \"RESPRSN\": \"responsible party\",\n    \"RETIREE\": \"retiree\",\n    \"RETMIL\":  \"retired military\",\n    \"RH\":  \"rehabilitation hospital\",\n    \"RHAT\":    \"addiction treatment center\",\n    \"RHEUM\":   \"rheumatology clinic\",\n    \"RHII\":    \"intellectual impairment center\",\n    \"RHMAD\":   \"parents with adjustment difficulties center\",\n    \"RHPI\":    \"physical impairment center\",\n    \"RHPIH\":   \"physical impairment - hearing center\",\n    \"RHPIMS\":  \"physical impairment - motor skills center\",\n    \"RHPIVS\":  \"physical impairment - visual skills center\",\n    \"RHU\": \"rehabilitation hospital unit\",\n    \"RHYAD\":   \"youths with adjustment difficulties center\",\n    \"RNEU\":    \"neuroradiology unit\",\n    \"ROOM\":    \"roommate\",\n    \"RTF\": \"residential treatment facility\",\n    \"SCHOOL\":  \"school\",\n    \"SCN\": \"screening\",\n    \"SEE\": \"seeing\",\n    \"SELF\":    \"self\",\n    \"SELFINS\": \"self insured coverage sponsor\",\n    \"SH\":  \"show\",\n    \"SIB\": \"sibling\",\n    \"SIBINLAW\":    \"sibling in-law\",\n    \"SIGOTHR\": \"significant other\",\n    \"SIS\": \"sister\",\n    \"SISINLAW\":    \"sister-in-law\",\n    \"SLEEP\":   \"sleep disorders unit\",\n    \"SNF\": \"skilled nursing facility\",\n    \"SNIFF\":   \"sniffing\",\n    \"SON\": \"natural son\",\n    \"SONADOPT\":    \"adopted son\",\n    \"SONC\":    \"son\",\n    \"SONFOST\": \"foster son\",\n    \"SONINLAW\":    \"son in-law\",\n    \"SPMED\":   \"sports medicine clinic\",\n    \"SPON\":    \"sponsored dependent\",\n    \"SPOWATT\": \"special power of attorney\",\n    \"SPS\": \"spouse\",\n    \"STPBRO\":  \"stepbrother\",\n    \"STPCHLD\": \"step child\",\n    \"STPDAU\":  \"stepdaughter\",\n    \"STPFTH\":  \"stepfather\",\n    \"STPMTH\":  \"stepmother\",\n    \"STPPRN\":  \"step parent\",\n    \"STPSIB\":  \"step sibling\",\n    \"STPSIS\":  \"stepsister\",\n    \"STPSON\":  \"stepson\",\n    \"STUD\":    \"student\",\n    \"SU\":  \"surgery clinic\",\n    \"SUBJECT\": \"self\",\n    \"SURF\":    \"substance use rehabilitation facility\",\n    \"THIRDPARTY\":  \"third party\",\n    \"TPA\": \"third party administrator\",\n    \"TR\":  \"transplant clinic\",\n    \"TRAVEL\":  \"travel and geographic medicine clinic\",\n    \"TRB\": \"tribal member\",\n    \"UMO\": \"utilization management organization\",\n    \"UNCLE\":   \"uncle\",\n    \"UPC\": \"underage protection center\",\n    \"URO\": \"urology clinic\",\n    \"V\":   \"verifying\",\n    \"VET\": \"veteran\",\n    \"VL\":  \"veal\",\n    \"WARD\":    \"ward\",\n    \"WIFE\":    \"wife\",\n    \"WL\":  \"wool\",\n    \"WND\": \"wound clinic\",\n    \"WO\":  \"working\",\n    \"WORK\":    \"work site\",\n  };\n\n  var PROBLEM_STATUS_MAP = {\n    \"55561003\": \"active\",\n    \"73425007\": \"inactive\",\n    \"90734009\": \"chronic\",\n    \"7087005\": \"intermittent\",\n    \"255227004\": \"recurrent\",\n    \"413322009\": \"resolved\",\n    \"415684004\": \"rule out\",\n    \"410516002\": \"ruled out\"\n  };\n\n\n  // copied from _.invert to avoid making browser users include all of underscore\n  var invertKeys = function(obj) {\n    var result = {};\n    var keys = Object.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  var lookupFnGenerator = function(map) {\n    return function(key) {\n      return map[key] || null;\n    };\n  };\n  var reverseLookupFnGenerator = function(map) {\n    return function(key) {\n      if (!key) { return null; }\n      var invertedMap = invertKeys(map);\n      key = key.toLowerCase();\n      return invertedMap[key] || null;\n    };\n  };\n  \n  \n  return {\n    gender: lookupFnGenerator(GENDER_MAP),\n    reverseGender: reverseLookupFnGenerator(GENDER_MAP),\n    maritalStatus: lookupFnGenerator(MARITAL_STATUS_MAP),\n    phone: lookupFnGenerator(PHONE_MAP),\n    reverseMaritalStatus: reverseLookupFnGenerator(MARITAL_STATUS_MAP),\n    religion: lookupFnGenerator(RELIGION_MAP),\n    reverseReligion: reverseLookupFnGenerator(RELIGION_MAP),\n    raceEthnicity: lookupFnGenerator(RACE_ETHNICITY_MAP),\n    reverseRaceEthnicity: reverseLookupFnGenerator(RACE_ETHNICITY_MAP),\n    role: lookupFnGenerator(ROLE_MAP),\n    reverseRole: reverseLookupFnGenerator(ROLE_MAP),\n    problemStatus: lookupFnGenerator(PROBLEM_STATUS_MAP),\n    reverseProblemStatus: reverseLookupFnGenerator(PROBLEM_STATUS_MAP)\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\nCore.XML = (function () {\n  \n  /*\n   * A function used to wrap DOM elements in an object so methods can be added\n   * to the element object. IE8 does not allow methods to be added directly to\n   * DOM objects.\n   */\n  var wrapElement = function (el) {\n    function wrapElementHelper(currentEl) {\n      return {\n        el: currentEl,\n        template: template,\n        content: content,\n        tag: tag,\n        immediateChildTag: immediateChildTag,\n        immediateChildrenTags: immediateChildrenTags,\n        elsByTag: elsByTag,\n        attr: attr,\n        boolAttr: boolAttr,\n        val: val,\n        isEmpty: isEmpty\n      };\n    }\n    \n    // el is an array of elements\n    if (el.length) {\n      var els = [];\n      for (var i = 0; i < el.length; i++) {\n        els.push(wrapElementHelper(el[i]));\n      }\n      return els;\n    \n    // el is a single element\n    } else {\n      return wrapElementHelper(el);\n    }\n  };\n  \n  \n  /*\n   * Find element by tag name, then attribute value.\n   */\n  var tagAttrVal = function (el, tag, attr, value) {\n    el = el.getElementsByTagName(tag);\n    for (var i = 0; i < el.length; i++) {\n      if (el[i].getAttribute(attr) === value) {\n        return el[i];\n      }\n    }\n  };\n  \n  \n  /*\n   * Search for a template ID, and return its parent element.\n   * Example:\n   *   <templateId root=\"2.16.840.1.113883.10.20.22.2.17\"/>\n   * Can be found using:\n   *   el = dom.template('2.16.840.1.113883.10.20.22.2.17');\n   */\n  var template = function (templateId) {\n    var el = tagAttrVal(this.el, 'templateId', 'root', templateId);\n    if (!el) {\n      return emptyEl();\n    } else {\n      return wrapElement(el.parentNode);\n    }\n  };\n\n  /*\n   * Search for a content tag by \"ID\", and return it as an element.\n   * These are used in the unstructured versions of each section but\n   * referenced from the structured version sometimes.\n   * Example:\n   *   <content ID=\"UniqueNameReferencedElsewhere\"/>\n   * Can be found using:\n   *   el = dom.content('UniqueNameReferencedElsewhere');\n   *\n   * We can't use `getElementById` because `ID` (the standard attribute name\n   * in this context) is not the same attribute as `id` in XML, so there are no matches\n   */\n  var content = function (contentId) {\n      var el = tagAttrVal(this.el, 'content', 'ID', contentId);\n      if (!el) {\n        // check the <td> tag too, which isn't really correct but\n        // will inevitably be used sometimes because it looks like very\n        // normal HTML to put the data directly in a <td>\n        el = tagAttrVal(this.el, 'td', 'ID', contentId);\n      }\n      if (!el) {\n        // Ugh, Epic uses really non-standard locations.\n        el = tagAttrVal(this.el, 'caption', 'ID', contentId) ||\n             tagAttrVal(this.el, 'paragraph', 'ID', contentId) ||\n             tagAttrVal(this.el, 'tr', 'ID', contentId) ||\n             tagAttrVal(this.el, 'item', 'ID', contentId);\n      }\n\n      if (!el) {\n        return emptyEl();\n      } else {\n        return wrapElement(el);\n      }\n    };\n  \n  \n  /*\n   * Search for the first occurrence of an element by tag name.\n   */\n  var tag = function (tag) {\n    var el = this.el.getElementsByTagName(tag)[0];\n    if (!el) {\n      return emptyEl();\n    } else {\n      return wrapElement(el);\n    }\n  };\n\n  /*\n   * Like `tag`, except it will only count a tag that is an immediate child of `this`.\n   * This is useful for tags like \"text\" which A. may not be present for a given location\n   * in every document and B. have a very different meaning depending on their positioning\n   *\n   *   <parent>\n   *     <target></target>\n   *   </parent>\n   * vs.\n   *   <parent>\n   *     <intermediate>\n   *       <target></target>\n   *     </intermediate>\n   *   </parent>\n   * parent.immediateChildTag('target') will have a result in the first case but not in the second.\n   */\n  var immediateChildTag = function (tag) {\n    var els = this.el.getElementsByTagName(tag);\n    if (!els) { return null; }\n    for (var i = 0; i < els.length; i++) {\n      if (els[i].parentNode === this.el) {\n        return wrapElement(els[i]);\n      }\n    }\n    return emptyEl();\n  };\n\n  /**\n   * Like 'immediateChildTag', it will return an array of all tags that are\n   * immediate children of this.\n   *\n   * @param tag\n   * @returns {*}\n   */\n  var immediateChildrenTags = function (tag) {\n    var els = this.el.getElementsByTagName(tag);\n    if (!els) { return null; }\n    var tags = [];\n    for (var i = 0; i < els.length; i++) {\n      if (els[i].parentNode === this.el) {\n        tags.push(wrapElement(els[i]));\n      }\n    }\n    return tags;\n  };\n  \n  \n  /*\n   * Search for all elements by tag name.\n   */\n  var elsByTag = function (tag) {\n    return wrapElement(this.el.getElementsByTagName(tag));\n  };\n\n\n  var unescapeSpecialChars = function(s) {\n    if (!s) { return s; }\n    return s.replace(/&lt;/g, '<')\n            .replace(/&gt;/g, '>')\n            .replace(/&amp;/g, '&')\n            .replace(/&quot;/g, '\"')\n            .replace(/&apos;/g, \"'\");\n  };\n  \n  \n  /*\n   * Retrieve the element's attribute value. Example:\n   *   value = el.attr('displayName');\n   *\n   * The browser and jsdom return \"null\" for empty attributes;\n   * xmldom (which we now use because it's faster / can be explicitly\n   * told to parse malformed XML as XML anyways), return the empty\n   * string instead, so we fix that here.\n   */\n  var attr = function (attrName) {\n    if (!this.el) { return null; }\n    var attrVal = this.el.getAttribute(attrName);\n    if (attrVal) {\n      return unescapeSpecialChars(attrVal);\n    }\n    return null;\n  };\n\n  /*\n   * Wrapper for attr() for retrieving boolean attributes;\n   * a raw call attr() will return Strings, which can be unexpected,\n   * since the string 'false' will by truthy\n   */\n  var boolAttr = function (attrName) {\n    var rawAttr = this.attr(attrName);\n    if (rawAttr === 'true' || rawAttr === '1') {\n      return true;\n    }\n    return false;\n  };\n\n  \n  /*\n   * Retrieve the element's value. For example, if the element is:\n   *   <city>Madison</city>\n   * Use:\n   *   value = el.tag('city').val();\n   *\n   * This function also knows how to retrieve the value of <reference> tags,\n   * which can store their content in a <content> tag in a totally different\n   * part of the document.\n   */\n  var val = function () {\n    if (!this.el) { return null; }\n    if (!this.el.childNodes || !this.el.childNodes.length) { return null; }\n    var textContent = this.el.textContent;\n\n    // if there's no text value here and the only thing inside is a\n    // <reference> tag, see if there's a linked <content> tag we can\n    // get something out of\n    if (!Core.stripWhitespace(textContent)) {\n\n      var contentId;\n      // \"no text value\" might mean there's just a reference tag\n      if (this.el.childNodes.length === 1 &&\n          this.el.childNodes[0].tagName === 'reference') {\n        contentId = this.el.childNodes[0].getAttribute('value');\n\n      // or maybe a newlines on top/above the reference tag\n      } else if (this.el.childNodes.length === 3 &&\n          this.el.childNodes[1].tagName === 'reference') {\n        contentId = this.el.childNodes[1].getAttribute('value');\n\n      } else {\n        return unescapeSpecialChars(textContent);\n      }\n\n      if (contentId && contentId[0] === '#') {\n        contentId = contentId.slice(1); // get rid of the '#'\n        var docRoot = wrapElement(this.el.ownerDocument);\n        var contentTag = docRoot.content(contentId);\n        return contentTag.val();\n      }\n    }\n\n    return unescapeSpecialChars(textContent);\n  };\n  \n  \n  /*\n   * Creates and returns an empty DOM element with tag name \"empty\":\n   *   <empty></empty>\n   */\n  var emptyEl = function () {\n    var el = doc.createElement('empty');\n    return wrapElement(el);\n  };\n  \n  \n  /*\n   * Determines if the element is empty, i.e.:\n   *   <empty></empty>\n   * This element is created by function `emptyEL`.\n   */\n  var isEmpty = function () {\n    if (this.el.tagName.toLowerCase() === 'empty') {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  \n  \n  /*\n   * Cross-browser XML parsing supporting IE8+ and Node.js.\n   */\n  var parse = function (data) {\n    // XML data must be a string\n    if (!data || typeof data !== \"string\") {\n      console.log(\"BB Error: XML data is not a string\");\n      return null;\n    }\n    \n    var xml, parser;\n    \n    // Node\n    if (isNode) {\n      parser = new (xmldom.DOMParser)();\n      xml = parser.parseFromString(data, \"text/xml\");\n\n    // Browser\n    } else {\n\n      // Standard parser\n      if (window.DOMParser) {\n        parser = new DOMParser();\n\n        xml = parser.parseFromString(data, \"text/xml\");\n\n        if (xml.getElementsByTagName(\"parsererror\").length) {\n          //used to escape special character\n          data = data.replace(/&/g,\"&amp;\");\n          xml = parser.parseFromString(data, \"text/xml\");\n        }\n        \n      // IE\n      } else {\n        try {\n          xml = new ActiveXObject(\"Microsoft.XMLDOM\");\n          xml.async = \"false\";\n          xml.loadXML(data);\n        } catch (e) {\n          console.log(\"BB ActiveX Exception: Could not parse XML\");\n        }\n      }\n    }\n\n    if (!xml || !xml.documentElement || xml.getElementsByTagName(\"parsererror\").length) {\n      console.log(\"BB Error: Could not parse XML\");\n      return null;\n    }\n    \n    return wrapElement(xml);\n  };\n  \n  \n  // Establish the root object, `window` in the browser, or `global` in Node.\n  var root = this,\n      xmldom,\n      isNode = false,\n      doc = root.document; // Will be `undefined` if we're in Node\n\n  // Check if we're in Node. If so, pull in `xmldom` so we can simulate the DOM.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      isNode = true;\n      xmldom = require(\"xmldom\");\n      doc = new xmldom.DOMImplementation().createDocument();\n    }\n  }\n  \n  \n  return {\n    parse: parse\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\n/* exported Documents */\nvar Documents = (function () {\n\n    /*\n     * ...\n     */\n    var detect = function (data) {\n        if (!data.template) {\n            return 'json';\n        }\n\n        if (!data.template('2.16.840.1.113883.3.88.11.32.1').isEmpty()) {\n            return 'c32';\n        } else if (!data.template('2.16.840.1.113883.10.20.22.1.1').isEmpty()) {\n            return 'ccda';\n        }\n    };\n\n\n    /*\n     * Get entries within an element (with tag name 'entry'), adds an `each` function\n     */\n    var entries = function () {\n        var each = function (callback) {\n            for (var i = 0; i < this.length; i++) {\n                callback(this[i]);\n            }\n        };\n\n        var els = this.elsByTag('entry');\n        els.each = each;\n        return els;\n    };\n\n\n    /*\n     * Parses an HL7 date in String form and creates a new Date object.\n     *\n     * TODO: CCDA dates can be in form:\n     *   <effectiveTime value=\"20130703094812\"/>\n     * ...or:\n     *   <effectiveTime>\n     *     <low value=\"19630617120000\"/>\n     *     <high value=\"20110207100000\"/>\n     *   </effectiveTime>\n     * For the latter, parseDate will not be given type `String`\n     * and will return `null`.\n     */\n    var parseDate = function (str) {\n        if (!str || typeof str !== 'string') {\n            return null;\n        }\n\n        // Note: months start at 0 (so January is month 0)\n\n        // e.g., value=\"1999\" translates to Jan 1, 1999\n        if (str.length === 4) {\n            return new Date(str, 0, 1);\n        }\n\n        var year = str.substr(0, 4);\n        // subtract 1 from the month since they're zero-indexed\n        var month = parseInt(str.substr(4, 2), 10) - 1;\n        // days are not zero-indexed. If we end up with the day 0 or '',\n        // that will be equivalent to the last day of the previous month\n        var day = str.substr(6, 2) || 1;\n\n        // check for time info (the presence of at least hours and mins after the date)\n        if (str.length >= 12) {\n            var hour = str.substr(8, 2);\n            var min = str.substr(10, 2);\n            var secs = str.substr(12, 2);\n\n            // check for timezone info (the presence of chars after the seconds place)\n            if (str.length > 14) {\n                // _utcOffsetFromString will return 0 if there's no utc offset found.\n                var utcOffset = _utcOffsetFromString(str.substr(14));\n                // We subtract that offset from the local time to get back to UTC\n                // (e.g., if we're -480 mins behind UTC, we add 480 mins to get back to UTC)\n                min = _toInt(min) - utcOffset;\n            }\n\n            var date = new Date(Date.UTC(year, month, day, hour, min, secs));\n            // This flag lets us output datetime-precision in our JSON even if the time happens\n            // to translate to midnight local time. If we clone the date object, it is not\n            // guaranteed to survive.\n            date._parsedWithTimeData = true;\n            return date;\n        }\n\n        return new Date(year, month, day);\n    };\n\n    // These regexes and the two functions below are copied from moment.js\n    // http://momentjs.com/\n    // https://github.com/moment/moment/blob/develop/LICENSE\n    var parseTimezoneChunker = /([\\+\\-]|\\d\\d)/gi;\n    var parseTokenTimezone = /Z|[\\+\\-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n    function _utcOffsetFromString(string) {\n        string = string || '';\n        var possibleTzMatches = (string.match(parseTokenTimezone) || []),\n            tzChunk = possibleTzMatches[possibleTzMatches.length - 1] || [],\n            parts = (tzChunk + '').match(parseTimezoneChunker) || ['-', 0, 0],\n            minutes = +(parts[1] * 60) + _toInt(parts[2]);\n\n        return parts[0] === '+' ? minutes : -minutes;\n    }\n\n    function _toInt(argumentForCoercion) {\n        var coercedNumber = +argumentForCoercion,\n            value = 0;\n\n        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n            if (coercedNumber >= 0) {\n                value = Math.floor(coercedNumber);\n            } else {\n                value = Math.ceil(coercedNumber);\n            }\n        }\n\n        return value;\n    }\n\n\n    /*\n     * Parses an HL7 name (prefix / given [] / family)\n     */\n    var parseName = function (nameEl) {\n        var prefix = nameEl.tag('prefix').val();\n\n        var els = nameEl.elsByTag('given');\n        var given = [];\n        for (var i = 0; i < els.length; i++) {\n            var val = els[i].val();\n            if (val) {\n                given.push(val);\n            }\n        }\n\n        var family = nameEl.tag('family').val();\n\n        var suffix = nameEl.tag('suffix').val();\n\n        return {\n            prefix: prefix,\n            given: given,\n            family: family,\n            suffix: suffix\n        };\n    };\n\n\n    /*\n     * Parses an HL7 address (streetAddressLine [], city, state, postalCode, country)\n     */\n    var parseAddress = function (addrEl) {\n        var els = addrEl.elsByTag('streetAddressLine');\n        var street = [];\n\n        for (var i = 0; i < els.length; i++) {\n            var val = els[i].val();\n            if (val) {\n                street.push(val);\n            }\n        }\n\n        var city = addrEl.tag('city').val(),\n            state = addrEl.tag('state').val(),\n            zip = addrEl.tag('postalCode').val(),\n            country = addrEl.tag('country').val();\n\n        return {\n            street: street,\n            city: city,\n            state: state,\n            zip: zip,\n            country: country\n        };\n    };\n\n    var parseIds = function (idEl) {\n        var ids = idEl.map(function (tag) {\n            return {\n                extension: tag.attr('extension'),\n                root: tag.attr('root'),\n                assigningAuthorityName: tag.attr('assigningAuthorityName')\n            };\n        });\n        return ids;\n    };\n\n    var parsePhones = function (phoneEl) {\n        var phones = phoneEl.map(function (tag) {\n            return {\n                type: Core.Codes.phone(tag.attr('use')),\n                number: tag.attr('value')\n            };\n        });\n        return phones;\n    };\n\n    // Node-specific code for unit tests\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            module.exports = {\n                parseDate: parseDate\n            };\n        }\n    }\n\n\n    return {\n        detect: detect,\n        entries: entries,\n        parseDate: parseDate,\n        parseName: parseName,\n        parseAddress: parseAddress,\n        parseIds: parseIds,\n        parsePhones: parsePhones\n    };\n\n})();\n;\n\n/*\n * ...\n */\n\nDocuments.C32 = (function () {\n  \n  /*\n   * Preprocesses the C32 document\n   */\n  var process = function (c32) {\n    c32.section = section;\n    return c32;\n  };\n  \n  \n  /*\n   * Finds the section of a C32 document\n   *\n   * Usually we check first for the HITSP section ID and then for the HL7-CCD ID.\n   */\n  var section = function (name) {\n    var el, entries = Documents.entries;\n    \n    switch (name) {\n      case 'document':\n        return this.template('2.16.840.1.113883.3.88.11.32.1');\n      case 'allergies':\n        el = this.template('2.16.840.1.113883.3.88.11.83.102');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.2');\n        }\n        el.entries = entries;\n        return el;\n      case 'demographics':\n        return this.template('2.16.840.1.113883.3.88.11.32.1');\n      case 'encounters':\n        el = this.template('2.16.840.1.113883.3.88.11.83.127');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.3');\n        }\n        el.entries = entries;\n        return el;\n      case 'immunizations':\n        el = this.template('2.16.840.1.113883.3.88.11.83.117');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.6');\n        }\n        el.entries = entries;\n        return el;\n      case 'results':\n        el = this.template('2.16.840.1.113883.3.88.11.83.122');\n        el.entries = entries;\n        return el;\n      case 'medications':\n        el = this.template('2.16.840.1.113883.3.88.11.83.112');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.8');\n        }\n        el.entries = entries;\n        return el;\n      case 'problems':\n        el = this.template('2.16.840.1.113883.3.88.11.83.103');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.11');\n        }\n        el.entries = entries;\n        return el;\n      case 'procedures':\n        el = this.template('2.16.840.1.113883.3.88.11.83.108');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.12');\n        }\n        el.entries = entries;\n        return el;\n      case 'vitals':\n        el = this.template('2.16.840.1.113883.3.88.11.83.119');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.1.16');\n        }\n        el.entries = entries;\n        return el;\n    }\n    \n    return null;\n  };\n  \n  \n  return {\n    process: process,\n    section: section\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\nDocuments.CCDA = (function () {\n  \n  /*\n   * Preprocesses the CCDA document\n   */\n  var process = function (ccda) {\n    ccda.section = section;\n    return ccda;\n  };\n  \n  \n  /*\n   * Finds the section of a CCDA document\n   */\n  var section = function (name) {\n    var el, entries = Documents.entries;\n    \n    switch (name) {\n      case 'document':\n        return this.template('2.16.840.1.113883.10.20.22.1.1');\n      case 'allergies':\n        el = this.template('2.16.840.1.113883.10.20.22.2.6.1');\n        el.entries = entries;\n        return el;\n      case 'care_plan':\n        el = this.template('2.16.840.1.113883.10.20.22.2.10');\n        el.entries = entries;\n        return el;\n      case 'chief_complaint':\n        el = this.template('2.16.840.1.113883.10.20.22.2.13');\n        if (el.isEmpty()) {\n          el = this.template('1.3.6.1.4.1.19376.1.5.3.1.1.13.2.1');\n        }\n        // no entries in Chief Complaint\n        return el;\n      case 'demographics':\n        return this.template('2.16.840.1.113883.10.20.22.1.1');\n      case 'encounters':\n        el = this.template('2.16.840.1.113883.10.20.22.2.22');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.22.1');\n        }\n        el.entries = entries;\n        return el;\n      case 'functional_statuses':\n        el = this.template('2.16.840.1.113883.10.20.22.2.14');\n        el.entries = entries;\n        return el;\n      case 'immunizations':\n        el = this.template('2.16.840.1.113883.10.20.22.2.2.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.2');\n        }\n        el.entries = entries;\n        return el;\n      case 'instructions':\n        el = this.template('2.16.840.1.113883.10.20.22.2.45');\n        el.entries = entries;\n        return el;\n      case 'results':\n        el = this.template('2.16.840.1.113883.10.20.22.2.3.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.3');\n        }\n        el.entries = entries;\n        return el;\n      case 'medications':\n        el = this.template('2.16.840.1.113883.10.20.22.2.1.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.1');\n        }\n        el.entries = entries;\n        return el;\n      case 'problems':\n        el = this.template('2.16.840.1.113883.10.20.22.2.5.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.5');\n        }\n        el.entries = entries;\n        return el;\n      case 'procedures':\n        el = this.template('2.16.840.1.113883.10.20.22.2.7.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.7');\n        }\n        el.entries = entries;\n        return el;\n      case 'social_history':\n        el = this.template('2.16.840.1.113883.10.20.22.2.17');\n        el.entries = entries;\n        return el;\n      case 'vitals':\n        el = this.template('2.16.840.1.113883.10.20.22.2.4.1');\n        if (el.isEmpty()) {\n          el = this.template('2.16.840.1.113883.10.20.22.2.4');\n        }\n        el.entries = entries;\n        return el;\n    }\n    \n    return null;\n  };\n  \n  \n  return {\n    process: process,\n    section: section\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\n/* exported Generators */\nvar Generators = (function () {\n  \n  var method = function () {};\n\n  /* Import ejs if we're in Node. Then setup custom formatting filters\n   */\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      ejs = require(\"ejs\");\n    }\n  }\n\n  if (typeof ejs !== 'undefined') {\n    /* Filters are automatically available to ejs to be used like \"... | hl7Date\"\n     * Helpers are functions that we'll manually pass in to ejs.\n     * The intended distinction is that a helper gets called with regular function-call syntax\n     */\n    var pad = function(number) {\n      if (number < 10) {\n        return '0' + number;\n      }\n      return String(number);\n    };\n\n    ejs.filters.hl7Date = function(obj) {\n      try {\n          if (obj === null || obj === undefined) { return 'nullFlavor=\"UNK\"'; }\n          var date = new Date(obj);\n          if (isNaN(date.getTime())) { return obj; }\n\n          var dateStr = null;\n          if (date.getHours() || date.getMinutes() || date.getSeconds()) {\n            // If there's a meaningful time, output a UTC datetime\n            dateStr = date.getUTCFullYear() +\n              pad( date.getUTCMonth() + 1 ) +\n              pad( date.getUTCDate() );\n            var timeStr = pad( date.getUTCHours() ) +\n              pad( date.getUTCMinutes() ) +\n              pad ( date.getUTCSeconds() ) +\n              \"+0000\";\n            return 'value=\"' + dateStr + timeStr + '\"';\n           \n          } else {\n            // If there's no time, don't apply timezone tranformations: just output a date\n            dateStr = String(date.getFullYear()) +\n              pad( date.getMonth() + 1 ) +\n              pad( date.getDate() );\n            return 'value=\"' + dateStr + '\"';\n          }\n\n      } catch (e) {\n          return obj;\n      }\n    };\n\n    var escapeSpecialChars = function(s) {\n      return s.replace(/</g, '&lt;')\n              .replace(/>/g, '&gt;')\n              .replace(/&/g, '&amp;')\n              .replace(/\"/g, '&quot;')\n              .replace(/'/g, '&apos;');\n    };\n\n    ejs.filters.hl7Code = function(obj) {\n      if (!obj) { return ''; }\n\n      var tag = '';\n      var name = obj.name || '';\n      if (obj.name) { tag += 'displayName=\"'+escapeSpecialChars(name)+'\"'; }\n\n      if (obj.code) {\n        tag += ' code=\"'+obj.code+'\"';\n        if (obj.code_system) { tag += ' codeSystem=\"'+escapeSpecialChars(obj.code_system)+'\"'; }\n        if (obj.code_system_name) { tag += ' codeSystemName=\"' +\n                                        escapeSpecialChars(obj.code_system_name)+'\"'; }\n      } else {\n        tag += ' nullFlavor=\"UNK\"';\n      }\n\n      if (!obj.name && ! obj.code) {\n        return 'nullFlavor=\"UNK\"';\n      }\n      \n      return tag;\n    };\n\n    ejs.filters.emptyStringIfFalsy = function(obj) {\n      if (!obj) { return ''; }\n      return obj;\n    };\n\n    if (!ejs.helpers) ejs.helpers = {};\n    ejs.helpers.simpleTag = function(tagName, value) {\n      if (value) {\n        return \"<\"+tagName+\">\"+value+\"</\"+tagName+\">\";\n      } else {\n        return \"<\"+tagName+\" nullFlavor=\\\"UNK\\\" />\";\n      }\n    };\n\n    ejs.helpers.addressTags = function(addressDict) {\n      if (!addressDict) {\n        return '<streetAddressLine nullFlavor=\"NI\" />\\n' +\n                '<city nullFlavor=\"NI\" />\\n' +\n                '<state nullFlavor=\"NI\" />\\n' +\n                '<postalCode nullFlavor=\"NI\" />\\n' +\n                '<country nullFlavor=\"NI\" />\\n';\n      }\n      \n      var tags = '';\n      if (!addressDict.street.length) {\n        tags += ejs.helpers.simpleTag('streetAddressLine', null) + '\\n';\n      } else {\n        for (var i=0; i<addressDict.street.length; i++) {\n          tags += ejs.helpers.simpleTag('streetAddressLine', addressDict.street[i]) + '\\n';\n        }\n      }\n      tags += ejs.helpers.simpleTag('city', addressDict.city) + '\\n';\n      tags += ejs.helpers.simpleTag('state', addressDict.state) + '\\n';\n      tags += ejs.helpers.simpleTag('postalCode', addressDict.zip) + '\\n';\n      tags += ejs.helpers.simpleTag('country', addressDict.country) + '\\n';\n      return tags;\n    };\n\n    ejs.helpers.nameTags = function(nameDict) {\n      if (!nameDict) {\n        return '<given nullFlavor=\"NI\" />\\n' +\n                '<family nullFlavor=\"NI\" />\\n';\n      }\n\n      var tags = '';\n      if (nameDict.prefix) {\n        tags += ejs.helpers.simpleTag('prefix', nameDict.prefix) + '\\n';\n      }\n      if (!nameDict.given.length) {\n        tags += ejs.helpers.simpleTag('given', null) + '\\n';\n      } else {\n        for (var i=0; i<nameDict.given.length; i++) {\n          tags += ejs.helpers.simpleTag('given', nameDict.given[i]) + '\\n';\n        }\n      }\n      tags += ejs.helpers.simpleTag('family', nameDict.family) + '\\n';\n      if (nameDict.suffix) {\n        tags += ejs.helpers.simpleTag('suffix', nameDict.suffix) + '\\n';\n      }\n      return tags;\n    };\n\n  }\n  \n  return {\n    method: method\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\nGenerators.C32 = (function () {\n  \n  /*\n   * Generates a C32 document\n   */\n  var run = function (json, template, testingMode) {\n    /* jshint unused: false */ // only until this stub is actually implemented\n    console.log(\"C32 generation is not implemented yet\");\n    return null;\n  };\n  \n  return {\n    run: run\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\nGenerators.CCDA = (function () {\n  \n  /*\n   * Generates a CCDA document\n   * A lot of the EJS setup happens in generators.js\n   *\n   * If `testingMode` is true, we'll set the \"now\" variable to a specific,\n   * fixed time, so that the expected XML doesn't change across runs\n   */\n  var run = function (json, template, testingMode) {\n    if (!ejs) {\n      console.log(\"The BB.js Generator (JSON->XML) requires the EJS template package. \" +\n                  \"Install it in Node or include it before this package in the browser.\");\n      return null;\n    }\n    if (!template) {\n      console.log(\"Please provide a template EJS file for the Generator to use. \" +\n                  \"Load it via fs.readFileSync in Node or XHR in the browser.\");\n      return null;\n    }\n\n    // `now` is actually now, unless we're running this for a test,\n    // in which case it's always Jan 1, 2000 at 12PM UTC\n    var now = (testingMode) ?\n      new Date('2000-01-01T12:00:00Z') : new Date();\n\n    var ccda = ejs.render(template, {\n      filename: 'ccda.xml',\n      bb: json,\n      now: now,\n      tagHelpers: ejs.helpers,\n      codes: Core.Codes\n    });\n    return ccda;\n  };\n  \n  return {\n    run: run\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\n/* exported Parsers */\nvar Parsers = (function () {\n  \n  var method = function () {};\n  \n  return {\n    method: method\n  };\n  \n})();\n;\n\n/*\n * Parser for the C32 document\n */\n\nParsers.C32 = (function () {\n  \n  var run = function (c32) {\n    var data = {};\n    \n    data.document              = Parsers.C32.document(c32);\n    data.allergies             = Parsers.C32.allergies(c32);\n    data.demographics          = Parsers.C32.demographics(c32);\n    data.encounters            = Parsers.C32.encounters(c32);\n    data.immunizations         = Parsers.C32.immunizations(c32).administered;\n    data.immunization_declines = Parsers.C32.immunizations(c32).declined;\n    data.results               = Parsers.C32.results(c32);\n    data.medications           = Parsers.C32.medications(c32);\n    data.problems              = Parsers.C32.problems(c32);\n    data.procedures            = Parsers.C32.procedures(c32);\n    data.vitals                = Parsers.C32.vitals(c32);\n    \n    data.json                       = Core.json;\n    data.document.json              = Core.json;\n    data.allergies.json             = Core.json;\n    data.demographics.json          = Core.json;\n    data.encounters.json            = Core.json;\n    data.immunizations.json         = Core.json;\n    data.immunization_declines.json = Core.json;\n    data.results.json               = Core.json;\n    data.medications.json           = Core.json;\n    data.problems.json              = Core.json;\n    data.procedures.json            = Core.json;\n    data.vitals.json                = Core.json;\n\n    // Sections that are in CCDA but not C32... we want to keep the API\n    // consistent, even if the entries are always null\n    data.smoking_status = {\n      date: null,\n      name: null,\n      code: null,\n      code_system: null,\n      code_system_name: null\n    };\n    data.smoking_status.json = Core.json;\n    \n    data.chief_complaint = {\n      text: null\n    };\n    data.chief_complaint.json = Core.json;\n\n    data.care_plan = [];\n    data.care_plan.json = Core.json;\n\n    data.instructions = [];\n    data.instructions.json = Core.json;\n\n    data.functional_statuses = [];\n    data.functional_statuses.json = Core.json;\n    \n    return data;\n  };\n\n  return {\n    run: run\n  };\n  \n})();\n;\n\n/*\n * Parser for the C32 document section\n */\n\nParsers.C32.document = function (c32) {\n\n    var parseDate = Documents.parseDate;\n    var parseName = Documents.parseName;\n    var parseAddress = Documents.parseAddress;\n    var parseIds = Documents.parseIds;\n    var parsePhones = Documents.parsePhones;\n\n    var data = {}, el;\n\n    var doc = c32.section('document');\n\n    var date = parseDate(doc.tag('effectiveTime').attr('value'));\n    var title = Core.stripWhitespace(doc.tag('title').val());\n\n    var author = doc.tag('author');\n\n    el = author.tag('assignedPerson').tag('name');\n    var name_dict = parseName(el);\n\n    /**\n     * Just for uniformity with CCDA\n     * @type {null}\n     */\n    var author_npi = null;\n\n    // Sometimes C32s include names that are just like <name>String</name>\n    // and we still want to get something out in that case\n    if (!name_dict.prefix && !name_dict.given.length && !name_dict.family) {\n        name_dict.family = el.val();\n    }\n\n    el = author.tag('addr');\n    var address_dict = parseAddress(el);\n\n    el = author.tag('assignedAuthor').immediateChildrenTags('telecom');\n    var author_phones = parsePhones(el);\n\n    var documentation_of_list = [];\n    var performers = doc.tag('documentationOf').elsByTag('performer');\n    for (var i = 0; i < performers.length; i++) {\n        el = performers[i].tag('assignedPerson').tag('name');\n        var performer_name_dict = parseName(el);\n        var performer_phones = parsePhones(performers[i].tag('assignedEntity').immediateChildrenTags('telecom'));\n\n        console.log('C32');\n        console.log(performers[i].tag('telecom').attr('value'));\n        console.log(performers[i].tag('assignedEntity').immediateChildrenTags('telecom'));\n\n        var performer_addr = parseAddress(el.tag('addr'));\n        var npi = performers[i].tag('assignedEntity').tag('id').attr('extension');\n\n        documentation_of_list.push({\n            npi: npi,\n            name: performer_name_dict,\n            phones: performer_phones,\n            address: performer_addr\n        });\n    }\n\n    el = doc.tag('legalAuthenticator');\n\n    var legal_date = parseDate(el.tag('time').attr('value'));\n    var legal_assigned_person = parseName(el.tag('assignedPerson').tag('name'));\n    var legal_org_address = parseAddress(el.tag('representedOrganization').tag('addr'));\n\n    var el2 = el.tag('assignedEntity').immediateChildrenTags('id');\n    var legal_ids = parseIds(el2);\n\n    var idEl = el.tag('representedOrganization').immediateChildrenTags('id');\n    var legal_org_ids = parseIds(idEl);\n\n    var legal_org_name = el.tag('representedOrganization').tag('name').val();\n\n    var phonesEl = el.tag('representedOrganization').immediateChildrenTags('telecom');\n    var legal_org_phones = parsePhones(phonesEl);\n\n    el = doc.tag('encompassingEncounter');\n    var location_name = Core.stripWhitespace(el.tag('name').val());\n    var location_addr_dict = parseAddress(el.tag('addr'));\n\n    var encounter_date = null;\n    el = el.tag('effectiveTime');\n    if (!el.isEmpty()) {\n        encounter_date = parseDate(el.attr('value'));\n    }\n\n    var custodianName = doc.tag('custodian').tag('assignedCustodian').tag('representedCustodianOrganization').tag('name').val();\n\n    data = {\n        custodian: {\n            name: custodianName\n        },\n        date: date,\n        title: title,\n        author: {\n            npi: author_npi,\n            name: name_dict,\n            address: address_dict,\n            phones: author_phones\n        },\n        documentation_of: documentation_of_list,\n        legal_authenticator: {\n            date: legal_date,\n            ids: legal_ids,\n            assigned_person: legal_assigned_person,\n            representedOrganization: {\n                ids: legal_org_ids,\n                name: legal_org_name,\n                phones: legal_org_phones,\n                address: legal_org_address\n            }\n        },\n        location: {\n            name: location_name,\n            address: location_addr_dict,\n            encounter_date: encounter_date\n        }\n    };\n\n    return data;\n};\n;\n\n/*\n * Parser for the C32 allergies section\n */\n\nParsers.C32.allergies = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var allergies = c32.section('allergies');\n  \n  allergies.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var start_date = parseDate(el.tag('low').attr('value')),\n        end_date = parseDate(el.tag('high').attr('value'));\n    \n    el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n    \n    // value => reaction_type\n    el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('value');\n    var reaction_type_name = el.attr('displayName'),\n        reaction_type_code = el.attr('code'),\n        reaction_type_code_system = el.attr('codeSystem'),\n        reaction_type_code_system_name = el.attr('codeSystemName');\n    \n    // reaction\n    el = entry.template('2.16.840.1.113883.10.20.1.54').tag('value');\n    var reaction_name = el.attr('displayName'),\n        reaction_code = el.attr('code'),\n        reaction_code_system = el.attr('codeSystem');\n    \n    // an irregularity seen in some c32s\n    if (!reaction_name) {\n      el = entry.template('2.16.840.1.113883.10.20.1.54').tag('text');\n      if (!el.isEmpty()) {\n        reaction_name = Core.stripWhitespace(el.val());\n      }\n    }\n\n    // severity\n    el = entry.template('2.16.840.1.113883.10.20.1.55').tag('value');\n    var severity = el.attr('displayName');\n    \n    // participant => allergen\n    el = entry.tag('participant').tag('code');\n    var allergen_name = el.attr('displayName'),\n        allergen_code = el.attr('code'),\n        allergen_code_system = el.attr('codeSystem'),\n        allergen_code_system_name = el.attr('codeSystemName');\n\n    // another irregularity seen in some c32s\n    if (!allergen_name) {\n      el = entry.tag('participant').tag('name');\n      if (!el.isEmpty()) {\n        allergen_name = el.val();\n      }\n    }\n    if (!allergen_name) {\n      el = entry.template('2.16.840.1.113883.3.88.11.83.6').tag('originalText');\n      if (!el.isEmpty()) {\n        allergen_name = Core.stripWhitespace(el.val());\n      }\n    }\n    \n    // status\n    el = entry.template('2.16.840.1.113883.10.20.1.39').tag('value');\n    var status = el.attr('displayName');\n    \n    data.push({\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      status: status,\n      severity: severity,\n      reaction: {\n        name: reaction_name,\n        code: reaction_code,\n        code_system: reaction_code_system\n      },\n      reaction_type: {\n        name: reaction_type_name,\n        code: reaction_type_code,\n        code_system: reaction_type_code_system,\n        code_system_name: reaction_type_code_system_name\n      },\n      allergen: {\n        name: allergen_name,\n        code: allergen_code,\n        code_system: allergen_code_system,\n        code_system_name: allergen_code_system_name\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 demographics section\n */\n\nParsers.C32.demographics = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var parsePhones = Documents.parsePhones;\n  var parseIds = Documents.parseIds;\n  var data = {}, el;\n  \n  var demographics = c32.section('demographics');\n  \n  var patient = demographics.tag('patientRole');\n  el = patient.tag('patient').tag('name');\n  var patient_name_dict = parseName(el);\n\n  var mrn_number = patient.tag('id').attr('extension');\n\n  el = patient.tag('patient');\n  var dob = parseDate(el.tag('birthTime').attr('value')),\n      gender = Core.Codes.gender(el.tag('administrativeGenderCode').attr('code')),\n\n      marital_status = Core.Codes.maritalStatus(el.tag('maritalStatusCode').attr('code'));\n  \n  el = patient.tag('addr');\n  var patient_address_dict = parseAddress(el);\n\n  el = patient.immediateChildrenTags('telecom');\n\n  var phones = parsePhones(el);\n\n  var email = null;\n\n    var language = patient.tag('languageCommunication').tag('languageCode').attr('code'),\n      race = patient.tag('raceCode').attr('displayName'),\n      ethnicity = patient.tag('ethnicGroupCode').attr('displayName'),\n      religion = patient.tag('religiousAffiliationCode').attr('displayName');\n  \n  el = patient.tag('birthplace');\n  var birthplace_dict = parseAddress(el);\n  \n  el = patient.tag('guardian');\n  var guardian_relationship = el.tag('code').attr('displayName'),\n    guardian_relationship_code = el.tag('code').attr('code'),\n      guardian_home = el.tag('telecom').attr('value');\n  \n  el = el.tag('guardianPerson').tag('name');\n  var guardian_name_dict = parseName(el);\n  \n  el = patient.tag('guardian').tag('addr');\n  var guardian_address_dict = parseAddress(el);\n  \n  el = patient.tag('providerOrganization');\n  var provider_organization = el.tag('name').val(),\n      provider_phones = parsePhones(el.immediateChildrenTags('telecom')),\n      provider_address_dict = parseAddress(el.tag('addr')),\n      provider_ids = parseIds(el.immediateChildrenTags('id'));\n\n\n  el = demographics.immediateChildrenTags('participant');\n\n  var patient_contacts = el.map(function(tag) {\n    tag = tag.tag('associatedEntity');\n\n    return {\n      relationship: Core.Codes.role(tag.attr('classCode')),\n      relationship_code: {\n        code: tag.tag('code').attr('code'),\n        displayName: tag.tag('code').attr('displayName'),\n      },\n      phones: parsePhones(tag.immediateChildrenTags('telecom')),\n      name: parseName(tag.tag('associatedPerson').tag('name'))\n    }\n  });\n\n  data = {\n    name: patient_name_dict,\n    dob: dob,\n    gender: gender,\n    mrn_number: mrn_number,\n    marital_status: marital_status,\n    address: patient_address_dict,\n    phones: phones,\n    email: email,\n    language: language,\n    race: race,\n    ethnicity: ethnicity,\n    religion: religion,\n    birthplace: {\n      state: birthplace_dict.state,\n      zip: birthplace_dict.zip,\n      country: birthplace_dict.country\n    },\n    guardian: {\n      name: {\n        given: guardian_name_dict.given,\n        family: guardian_name_dict.family\n      },\n      relationship: guardian_relationship,\n      relationship_code: guardian_relationship_code,\n      address: guardian_address_dict,\n      phone: {\n        home: guardian_home\n      }\n    },\n    patient_contacts: patient_contacts,\n    provider: {\n      ids: provider_ids,\n      organization: provider_organization,\n      phones: provider_phones,\n      address: provider_address_dict\n    }\n  };\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 encounters section\n */\n\nParsers.C32.encounters = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var parseIds = Documents.parseIds;\n\n  var data = [], el;\n  \n  var encounters = c32.section('encounters');\n  \n  encounters.entries().each(function(entry) {\n    \n    var date = parseDate(entry.tag('effectiveTime').attr('value'));\n    if (!date) {\n      date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n    }\n    \n    el = entry.tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName'),\n        code_system_version = el.attr('codeSystemVersion');\n    \n    // translation\n    el = entry.tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n    // performer\n    el = entry.tag('performer');\n    var performer_name = el.tag('name').val(),\n        performer_code = el.attr('code'),\n        performer_code_system = el.attr('codeSystem'),\n        performer_code_system_name = el.attr('codeSystemName'),\n        performer_ids = parseIds(entry.tag('performer').tag('assignedEntity').immediateChildrenTags('id'));\n    \n    // participant => location\n    el = entry.tag('participant');\n    var organization = el.tag('name').val(),\n        location_dict = parseAddress(el);\n    location_dict.organization = organization;\n\n    // findings\n    var findings = [];\n    var findingEls = entry.elsByTag('entryRelationship');\n    for (var i = 0; i < findingEls.length; i++) {\n      el = findingEls[i].tag('value');\n      findings.push({\n        name: el.attr('displayName'),\n        code: el.attr('code'),\n        code_system: el.attr('codeSystem')\n      });\n    }\n    \n    data.push({\n      date: date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      code_system_version: code_system_version,\n      findings: findings,\n      translation: {\n        name: translation_name,\n        code: translation_code,\n        code_system: translation_code_system,\n        code_system_name: translation_code_system_name\n      },\n      performer: {\n        ids: performer_ids,\n        name: performer_name,\n        code: performer_code,\n        code_system: performer_code_system,\n        code_system_name: performer_code_system_name\n      },\n      location: location_dict\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 immunizations section\n */\n\nParsers.C32.immunizations = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var administeredData = [], declinedData = [], el, product;\n  \n  var immunizations = c32.section('immunizations');\n  \n  immunizations.entries().each(function(entry) {\n    \n    // date\n    el = entry.tag('effectiveTime');\n    var date = parseDate(el.attr('value'));\n    if (!date) {\n      date = parseDate(el.tag('low').attr('value'));\n    }\n\n    // if 'declined' is true, this is a record that this vaccine WASN'T administered\n    el = entry.tag('substanceAdministration');\n    var declined = el.boolAttr('negationInd');\n\n    // product\n    product = entry.template('2.16.840.1.113883.10.20.1.53');\n    el = product.tag('code');\n    var product_name = el.attr('displayName'),\n        product_code = el.attr('code'),\n        product_code_system = el.attr('codeSystem'),\n        product_code_system_name = el.attr('codeSystemName');\n\n    // translation\n    el = product.tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n\n    // misc product details\n    el = product.tag('lotNumberText');\n    var lot_number = el.val();\n\n    el = product.tag('manufacturerOrganization');\n    var manufacturer_name = el.tag('name').val();\n    \n    // route\n    el = entry.tag('routeCode');\n    var route_name = el.attr('displayName'),\n        route_code = el.attr('code'),\n        route_code_system = el.attr('codeSystem'),\n        route_code_system_name = el.attr('codeSystemName');\n    \n    // instructions\n    el = entry.template('2.16.840.1.113883.10.20.1.49');\n    var instructions_text = Core.stripWhitespace(el.tag('text').val());\n    el = el.tag('code');\n    var education_name = el.attr('displayName'),\n        education_code = el.attr('code'),\n        education_code_system = el.attr('codeSystem');\n\n    // dose\n    el = entry.tag('doseQuantity');\n    var dose_value = el.attr('value'),\n        dose_unit = el.attr('unit');\n    \n    var data = (declined) ? declinedData : administeredData;\n    data.push({\n      date: date,\n      product: {\n        name: product_name,\n        code: product_code,\n        code_system: product_code_system,\n        code_system_name: product_code_system_name,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        lot_number: lot_number,\n        manufacturer_name: manufacturer_name\n      },\n      dose_quantity: {\n        value: dose_value,\n        unit: dose_unit\n      },\n      route: {\n        name: route_name,\n        code: route_code,\n        code_system: route_code_system,\n        code_system_name: route_code_system_name\n      },\n      instructions: instructions_text,\n      education_type: {\n        name: education_name,\n        code: education_code,\n        code_system: education_code_system\n      }\n    });\n  });\n  \n  return {\n    administered: administeredData,\n    declined: declinedData\n  };\n};\n;\n\n/*\n * Parser for the C32 results (labs) section\n */\n\nParsers.C32.results = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var results = c32.section('results');\n  \n  results.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var panel_date = parseDate(entry.tag('effectiveTime').attr('value'));\n    if (!panel_date) {\n      panel_date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n    }\n    \n    // panel\n    el = entry.tag('code');\n    var panel_name = el.attr('displayName'),\n        panel_code = el.attr('code'),\n        panel_code_system = el.attr('codeSystem'),\n        panel_code_system_name = el.attr('codeSystemName');\n    \n    var observation;\n    var tests = entry.elsByTag('observation');\n    var tests_data = [];\n    \n    for (var i = 0; i < tests.length; i++) {\n      observation = tests[i];\n      \n      // sometimes results organizers contain non-results. we only want tests\n      if (observation.template('2.16.840.1.113883.10.20.1.31').val()) {\n        var date = parseDate(observation.tag('effectiveTime').attr('value'));\n        \n        el = observation.tag('code');\n        var name = el.attr('displayName'),\n            code = el.attr('code'),\n            code_system = el.attr('codeSystem'),\n            code_system_name = el.attr('codeSystemName');\n\n        if (!name) {\n          name = Core.stripWhitespace(observation.tag('text').val());\n        }\n    \n        el = observation.tag('translation');\n        var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n        el = observation.tag('value');\n        var value = el.attr('value'),\n            unit = el.attr('unit');\n        // We could look for xsi:type=\"PQ\" (physical quantity) but it seems better\n        // not to trust that that field has been used correctly...\n        if (value && !isNaN(parseFloat(value))) {\n          value = parseFloat(value);\n        }\n        if (!value) {\n          value = el.val(); // look for free-text values\n        }\n    \n        el = observation.tag('referenceRange');\n        var reference_range_text = Core.stripWhitespace(el.tag('observationRange').tag('text').val()),\n            reference_range_low_unit = el.tag('observationRange').tag('low').attr('unit'),\n            reference_range_low_value = el.tag('observationRange').tag('low').attr('value'),\n            reference_range_high_unit = el.tag('observationRange').tag('high').attr('unit'),\n            reference_range_high_value = el.tag('observationRange').tag('high').attr('value');\n        \n        tests_data.push({\n          date: date,\n          name: name,\n          value: value,\n          unit: unit,\n          code: code,\n          code_system: code_system,\n          code_system_name: code_system_name,\n          translation: {\n            name: translation_name,\n            code: translation_code,\n            code_system: translation_code_system,\n            code_system_name: translation_code_system_name\n          },\n          reference_range: {\n            text: reference_range_text,\n            low_unit: reference_range_low_unit,\n            low_value: reference_range_low_value,\n            high_unit: reference_range_high_unit,\n            high_value: reference_range_high_value,\n          }\n        });\n      }\n    }\n    \n    data.push({\n      name: panel_name,\n      code: panel_code,\n      code_system: panel_code_system,\n      code_system_name: panel_code_system_name,\n      date: panel_date,\n      tests: tests_data\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 medications section\n */\n\nParsers.C32.medications = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var data = [], el;\n  \n  var medications = c32.section('medications');\n  \n  medications.entries().each(function(entry) {\n    var status = entry.tag('value').attr('displayName');\n\n    var reference = entry.tag('reference').attr('value');\n    var referenceTitle = entry.tag('text').val();\n\n    if (reference != null) {\n      var referenceSig = c32.content('sig-' + reference.split('-')[1]).val();\n    }\n\n    var text = null;\n    el = entry.tag('substanceAdministration').immediateChildTag('text');\n    if (!el.isEmpty()) {\n      // technically C32s don't use this, but C83s (another CCD) do,\n      // and CCDAs do, so we may see it anyways\n      text = Core.stripWhitespace(el.val());\n    }\n\n    var effectiveTimes = entry.elsByTag('effectiveTime');\n\n    el = effectiveTimes[0]; // the first effectiveTime is the med start date\n    var start_date = null, end_date = null;\n    if (el) {\n      start_date = parseDate(el.tag('low').attr('value'));\n      end_date = parseDate(el.tag('high').attr('value'));\n    }\n\n    // the second effectiveTime might the schedule period or it might just\n    // be a random effectiveTime from further in the entry... xsi:type should tell us\n    el = effectiveTimes[1];\n    var schedule_type = null, schedule_period_value = null, schedule_period_unit = null;\n    if (el && el.attr('xsi:type') === 'PIVL_TS') {\n      var institutionSpecified = el.attr('institutionSpecified');\n      if (institutionSpecified === 'true') {\n        schedule_type= 'frequency';\n      } else if (institutionSpecified === 'false') {\n        schedule_type = 'interval';\n      }\n\n      el = el.tag('period');\n      schedule_period_value = el.attr('value');\n      schedule_period_unit = el.attr('unit');\n    }\n    \n    el = entry.tag('manufacturedProduct').tag('code');\n    var product_name = el.attr('displayName'),\n        product_code = el.attr('code'),\n        product_code_system = el.attr('codeSystem');\n\n    var product_original_text = null;\n    el = entry.tag('manufacturedProduct').tag('originalText');\n    if (!el.isEmpty()) {\n      product_original_text = Core.stripWhitespace(el.val());\n    }\n    // if we don't have a product name yet, try the originalText version\n    if (!product_name && product_original_text) {\n      product_name = product_original_text;\n    }\n\n    // irregularity in some c32s\n    if (!product_name) {\n      el = entry.tag('manufacturedProduct').tag('name');\n      if (!el.isEmpty()) {\n        product_name = Core.stripWhitespace(el.val());\n      }\n    }\n    \n    el = entry.tag('manufacturedProduct').tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.tag('doseQuantity');\n    var dose_value = el.attr('value'),\n        dose_unit = el.attr('unit');\n    \n    el = entry.tag('rateQuantity');\n    var rate_quantity_value = el.attr('value'),\n        rate_quantity_unit = el.attr('unit');\n    \n    el = entry.tag('precondition').tag('value');\n    var precondition_name = el.attr('displayName'),\n        precondition_code = el.attr('code'),\n        precondition_code_system = el.attr('codeSystem');\n    \n    el = entry.template('2.16.840.1.113883.10.20.1.28').tag('value');\n    var reason_name = el.attr('displayName'),\n        reason_code = el.attr('code'),\n        reason_code_system = el.attr('codeSystem');\n    \n    el = entry.tag('routeCode');\n    var route_name = el.attr('displayName'),\n        route_code = el.attr('code'),\n        route_code_system = el.attr('codeSystem'),\n        route_code_system_name = el.attr('codeSystemName');\n    \n    // participant/playingEntity => vehicle\n    el = entry.tag('participant').tag('playingEntity');\n    var vehicle_name = el.tag('name').val();\n\n    el = el.tag('code');\n    // prefer the code vehicle_name but fall back to the non-coded one\n    // (which for C32s is in fact the primary field for this info)\n    vehicle_name = el.attr('displayName') || vehicle_name;\n    var vehicle_code = el.attr('code'),\n        vehicle_code_system = el.attr('codeSystem'),\n        vehicle_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.tag('administrationUnitCode');\n    var administration_name = el.attr('displayName'),\n        administration_code = el.attr('code'),\n        administration_code_system = el.attr('codeSystem'),\n        administration_code_system_name = el.attr('codeSystemName');\n    \n    // performer => prescriber\n    el = entry.tag('performer');\n    var prescriber_organization = el.tag('name').val(),\n        prescriber_person = null;\n    \n    data.push({\n      reference: reference,\n      reference_title: referenceTitle,\n      reference_sig: referenceSig,\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      status: status,\n      text: text,\n      product: {\n        name: product_name,\n        text: product_original_text,\n        code: product_code,\n        code_system: product_code_system,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        }\n      },\n      dose_quantity: {\n        value: dose_value,\n        unit: dose_unit\n      },\n      rate_quantity: {\n        value: rate_quantity_value,\n        unit: rate_quantity_unit\n      },\n      precondition: {\n        name: precondition_name,\n        code: precondition_code,\n        code_system: precondition_code_system\n      },\n      reason: {\n        name: reason_name,\n        code: reason_code,\n        code_system: reason_code_system\n      },\n      route: {\n        name: route_name,\n        code: route_code,\n        code_system: route_code_system,\n        code_system_name: route_code_system_name\n      },\n      schedule: {\n        type: schedule_type,\n        period_value: schedule_period_value,\n        period_unit: schedule_period_unit\n      },\n      vehicle: {\n        name: vehicle_name,\n        code: vehicle_code,\n        code_system: vehicle_code_system,\n        code_system_name: vehicle_code_system_name\n      },\n      administration: {\n        name: administration_name,\n        code: administration_code,\n        code_system: administration_code_system,\n        code_system_name: administration_code_system_name\n      },\n      prescriber: {\n        organization: prescriber_organization,\n        person: prescriber_person\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 problems section\n */\n\nParsers.C32.problems = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var problems = c32.section('problems');\n  \n  problems.entries().each(function(entry) {\n\n    var reference = entry.tag('reference').attr('value');\n\n    var referenceTitle = entry.tag('text').val();\n\n    el = entry.tag('effectiveTime');\n    var start_date = parseDate(el.tag('low').attr('value')),\n        end_date = parseDate(el.tag('high').attr('value'));\n    \n    el = entry.template('2.16.840.1.113883.10.20.1.28').tag('value');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n\n    // Pre-C32 CCDs put the problem name in this \"originalText\" field, and some vendors\n    // continue doing this with their C32, even though it's not technically correct\n    if (!name) {\n      el = entry.template('2.16.840.1.113883.10.20.1.28').tag('originalText');\n      if (!el.isEmpty()) {\n        name = Core.stripWhitespace(el.val());\n      }\n    }\n\n    el = entry.template('2.16.840.1.113883.10.20.1.28').tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.template('2.16.840.1.113883.10.20.1.50');\n    var status = el.tag('value').attr('displayName');\n    \n    var age = null;\n    el = entry.template('2.16.840.1.113883.10.20.1.38');\n    if (!el.isEmpty()) {\n      age = parseFloat(el.tag('value').attr('value'));\n    }\n    \n    data.push({\n      reference: reference,\n      reference_title: referenceTitle,\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      name: name,\n      status: status,\n      age: age,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      translation: {\n        name: translation_name,\n        code: translation_code,\n        code_system: translation_code_system,\n        code_system_name: translation_code_system_name\n      },\n      comment: null // not part of C32\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 procedures section\n */\n\nParsers.C32.procedures = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var procedures = c32.section('procedures');\n  \n  procedures.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var date = parseDate(el.attr('value'));\n    \n    el = entry.tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem');\n\n    if (!name) {\n      name = Core.stripWhitespace(entry.tag('originalText').val());\n    }\n    \n    // 'specimen' tag not always present\n    el = entry.tag('specimen').tag('code');\n    var specimen_name = el.attr('displayName'),\n        specimen_code = el.attr('code'),\n        specimen_code_system = el.attr('codeSystem');\n    \n    el = entry.tag('performer').tag('addr');\n    var organization = el.tag('name').val(),\n        phone = el.tag('telecom').attr('value');\n    \n    var performer_dict = parseAddress(el);\n    performer_dict.organization = organization;\n    performer_dict.phone = phone;\n    \n    // participant => device\n    el = entry.tag('participant').tag('code');\n    var device_name = el.attr('displayName'),\n        device_code = el.attr('code'),\n        device_code_system = el.attr('codeSystem');\n    \n    data.push({\n      date: date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      specimen: {\n        name: specimen_name,\n        code: specimen_code,\n        code_system: specimen_code_system\n      },\n      performer: performer_dict,\n      device: {\n        name: device_name,\n        code: device_code,\n        code_system: device_code_system\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the C32 vitals section\n */\n\nParsers.C32.vitals = function (c32) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var vitals = c32.section('vitals');\n  \n  vitals.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var entry_date = parseDate(el.attr('value'));\n    \n    var result;\n    var results = entry.elsByTag('component');\n    var results_data = [];\n    \n    for (var j = 0; j < results.length; j++) {\n      result = results[j];\n      \n      // Results\n      \n      el = result.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n      \n      el = result.tag('value');\n      var value = parseFloat(el.attr('value')),\n          unit = el.attr('unit');\n      \n      results_data.push({\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        value: value,\n        unit: unit\n      });\n    }\n    \n    data.push({\n      date: entry_date,\n      results: results_data\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA document\n */\n\nParsers.CCDA = (function () {\n  \n  var run = function (ccda) {\n    var data = {};\n    \n    data.document              = Parsers.CCDA.document(ccda);\n    data.allergies             = Parsers.CCDA.allergies(ccda);\n    data.care_plan             = Parsers.CCDA.care_plan(ccda);\n    data.chief_complaint       = Parsers.CCDA.free_text(ccda, 'chief_complaint');\n    data.demographics          = Parsers.CCDA.demographics(ccda);\n    data.encounters            = Parsers.CCDA.encounters(ccda);\n    data.functional_statuses   = Parsers.CCDA.functional_statuses(ccda);\n    data.immunizations         = Parsers.CCDA.immunizations(ccda).administered;\n    data.immunization_declines = Parsers.CCDA.immunizations(ccda).declined;\n    data.instructions          = Parsers.CCDA.instructions(ccda);\n    data.results               = Parsers.CCDA.results(ccda);\n    data.medications           = Parsers.CCDA.medications(ccda);\n    data.problems              = Parsers.CCDA.problems(ccda);\n    data.procedures            = Parsers.CCDA.procedures(ccda);\n    data.smoking_status        = Parsers.CCDA.smoking_status(ccda);\n    data.vitals                = Parsers.CCDA.vitals(ccda);\n    \n    data.json                        = Core.json;\n    data.document.json               = Core.json;\n    data.allergies.json              = Core.json;\n    data.care_plan.json              = Core.json;\n    data.chief_complaint.json        = Core.json;\n    data.demographics.json           = Core.json;\n    data.encounters.json             = Core.json;\n    data.functional_statuses.json    = Core.json;\n    data.immunizations.json          = Core.json;\n    data.immunization_declines.json  = Core.json;\n    data.instructions.json           = Core.json;\n    data.results.json                = Core.json;\n    data.medications.json            = Core.json;\n    data.problems.json               = Core.json;\n    data.procedures.json             = Core.json;\n    data.smoking_status.json         = Core.json;\n    data.vitals.json                 = Core.json;\n    \n    return data;\n  };\n\n  return {\n    run: run\n  };\n  \n})();\n;\n\n/*\n * Parser for the CCDA document section\n */\n\nParsers.CCDA.document = function (ccda) {\n\n    var parseDate = Documents.parseDate;\n    var parseName = Documents.parseName;\n    var parseAddress = Documents.parseAddress;\n    var parsePhones = Documents.parsePhones;\n    var parseIds = Documents.parseIds;\n\n    var data = {}, el;\n\n    var doc = ccda.section('document');\n\n    var date = parseDate(doc.tag('effectiveTime').attr('value'));\n    var title = Core.stripWhitespace(doc.tag('title').val());\n\n    var author = doc.tag('author');\n    var assigned_author_oid = author.tag('assignedAuthor').tag('id');\n    el = author.tag('assignedPerson').tag('name');\n    var name_dict = parseName(el);\n\n    var author_npi = author.tag('assignedAuthor').tag('id').attr('extension');\n\n    el = author.tag('addr');\n    var address_dict = parseAddress(el);\n\n    el = author.tag('assignedAuthor').immediateChildrenTags('telecom');\n    var author_phones = parsePhones(el);\n\n    var documentation_of_list = [];\n    var performers = doc.tag('documentationOf').elsByTag('performer');\n    for (var i = 0; i < performers.length; i++) {\n        el = performers[i];\n        var performer_name_dict = parseName(el);\n        var performer_phones = parsePhones(el.elsByTag('telecom'));\n\n        console.log('CCDA');\n        console.log(el.tag('telecom').attr('value'));\n        console.log(el.elsByTag('telecom'));\n\n        var performer_addr = parseAddress(el.tag('addr'));\n\n        documentation_of_list.push({\n            name: performer_name_dict,\n            phones: performer_phones,\n            address: performer_addr\n        });\n    }\n\n    el = doc.tag('legalAuthenticator');\n\n    var legal_date = parseDate(el.tag('time').attr('value'));\n    var legal_assigned_person = parseName(el.tag('assignedEntity').tag('assignedPerson').tag('name'));\n    var legal_org_address = parseAddress(el.tag('assignedEntity').tag('addr'));\n\n    var el2 = el.tag('assignedEntity').immediateChildrenTags('id');\n    var legal_ids = parseIds(el2);\n\n    var idEl = el.tag('representedOrganization').immediateChildrenTags('id');\n    var legal_org_ids = parseIds(idEl);\n\n    var legal_org_name = el.tag('representedOrganization').tag('name').val();\n\n    var phonesEl = el.tag('assignedEntity').immediateChildrenTags('telecom');\n    var legal_org_phones = parsePhones(phonesEl);\n\n\n    el = doc.tag('encompassingEncounter').tag('location');\n    var location_name = Core.stripWhitespace(el.tag('name').val());\n    var location_addr_dict = parseAddress(el.tag('addr'));\n\n    var encounter_date = null;\n    el = el.tag('effectiveTime');\n    if (!el.isEmpty()) {\n        encounter_date = parseDate(el.attr('value'));\n    }\n\n    var custodianName = doc.tag('custodian').tag('assignedCustodian').tag('representedCustodianOrganization').tag('name').val();\n\n\n    data = {\n        custodian: {\n            name: custodianName\n        },\n        date: date,\n        title: title,\n        author: {\n            npi: author_npi,\n            name: name_dict,\n            address: address_dict,\n            phones: author_phones\n        },\n        documentation_of: documentation_of_list,\n        legal_authenticator: {\n            date: legal_date,\n            ids: legal_ids,\n            assigned_person: legal_assigned_person,\n            representedOrganization: {\n                ids: legal_org_ids,\n                name: legal_org_name,\n                phones: legal_org_phones,\n                address: legal_org_address\n            }\n        },\n        location: {\n            name: location_name,\n            address: location_addr_dict,\n            encounter_date: encounter_date\n        }\n    };\n\n    return data;\n};\n;\n\n/*\n * Parser for the CCDA allergies section\n */\n\nParsers.CCDA.allergies = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var allergies = ccda.section('allergies');\n  \n  allergies.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var start_date = parseDate(el.tag('low').attr('value')),\n        end_date = parseDate(el.tag('high').attr('value'));\n    \n    el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n    \n    // value => reaction_type\n    el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('value');\n    var reaction_type_name = el.attr('displayName'),\n        reaction_type_code = el.attr('code'),\n        reaction_type_code_system = el.attr('codeSystem'),\n        reaction_type_code_system_name = el.attr('codeSystemName');\n    \n    // reaction\n    el = entry.template('2.16.840.1.113883.10.20.22.4.9').tag('value');\n    var reaction_name = el.attr('displayName'),\n        reaction_code = el.attr('code'),\n        reaction_code_system = el.attr('codeSystem');\n    \n    // severity\n    el = entry.template('2.16.840.1.113883.10.20.22.4.8').tag('value');\n    var severity = el.attr('displayName');\n    \n    // participant => allergen\n    el = entry.tag('participant').tag('code');\n    var allergen_name = el.attr('displayName'),\n        allergen_code = el.attr('code'),\n        allergen_code_system = el.attr('codeSystem'),\n        allergen_code_system_name = el.attr('codeSystemName');\n\n    // this is not a valid place to store the allergen name but some vendors use it\n    if (!allergen_name) {\n      el = entry.tag('participant').tag('name');\n      if (!el.isEmpty()) {\n        allergen_name = el.val();\n      }\n    }\n    if (!allergen_name) {\n      el = entry.template('2.16.840.1.113883.10.20.22.4.7').tag('originalText');\n      if (!el.isEmpty()) {\n        allergen_name = Core.stripWhitespace(el.val());\n      }\n    }\n    \n    // status\n    el = entry.template('2.16.840.1.113883.10.20.22.4.28').tag('value');\n    var status = el.attr('displayName');\n    \n    data.push({\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      status: status,\n      severity: severity,\n      reaction: {\n        name: reaction_name,\n        code: reaction_code,\n        code_system: reaction_code_system\n      },\n      reaction_type: {\n        name: reaction_type_name,\n        code: reaction_type_code,\n        code_system: reaction_type_code_system,\n        code_system_name: reaction_type_code_system_name\n      },\n      allergen: {\n        name: allergen_name,\n        code: allergen_code,\n        code_system: allergen_code_system,\n        code_system_name: allergen_code_system_name\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA \"plan of care\" section\n */\n\nParsers.CCDA.care_plan = function (ccda) {\n  \n  var data = [], el;\n  \n  var care_plan = ccda.section('care_plan');\n  \n  care_plan.entries().each(function(entry) {\n    \n    var name = null,\n        code = null,\n        code_system = null,\n        code_system_name = null;\n\n    // Plan of care encounters, which have no other details\n    el = entry.template('2.16.840.1.113883.10.20.22.4.40');\n    if (!el.isEmpty()) {\n      name = 'encounter';\n    } else {\n      el = entry.tag('code');\n      \n      name = el.attr('displayName');\n      code = el.attr('code');\n      code_system = el.attr('codeSystem');\n      code_system_name = el.attr('codeSystemName');\n    }\n\n    var text = Core.stripWhitespace(entry.tag('text').val());\n    \n    data.push({\n      text: text,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA demographics section\n */\n\nParsers.CCDA.demographics = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var parsePhones = Documents.parsePhones;\n  var parseIds = Documents.parseIds;\n  var data = {}, el;\n  \n  var demographics = ccda.section('demographics');\n  \n  var patient = demographics.tag('patientRole');\n  el = patient.tag('patient').tag('name');\n  var patient_name_dict = parseName(el);\n\n  var mrn_number = patient.tag('id').attr('extension');\n\n  el = patient.tag('patient');\n  var dob = parseDate(el.tag('birthTime').attr('value')),\n      gender = Core.Codes.gender(el.tag('administrativeGenderCode').attr('code')),\n      marital_status = Core.Codes.maritalStatus(el.tag('maritalStatusCode').attr('code'));\n  \n  el = patient.tag('addr');\n  var patient_address_dict = parseAddress(el);\n\n  el = patient.immediateChildrenTags('telecom');\n\n  var phones = parsePhones(el);\n\n  /**\n   * This works for an aprima CCDA\n   *\n   * @todo: Put this in the helpers file\n   * @param telecoms\n   * @returns {string}\n   */\n  var parseEmail = function (telecoms) {\n    if (! telecoms.length > 0) {\n      return null;\n    }\n\n    for (var i = 0; i < telecoms.length; i++) {\n      var telecomValue = telecoms[i].attr('value');\n\n      if (telecomValue == null) {\n        continue;\n      }\n\n      if (! (telecomValue.indexOf('@') > -1)) {\n        continue;\n      }\n\n      if (telecomValue.indexOf(':') > -1) {\n        var exploded = telecomValue.split(':');\n        return exploded[1].toString();\n      }\n\n      return telecomValue.toString();\n    }\n  };\n\n  var parsedEmail = parseEmail(el);\n  var email = parsedEmail ? parsedEmail : null;\n\n  var language = patient.tag('languageCommunication').tag('languageCode').attr('code'),\n      race = patient.tag('raceCode').attr('displayName'),\n      ethnicity = patient.tag('ethnicGroupCode').attr('displayName'),\n      religion = patient.tag('religiousAffiliationCode').attr('displayName');\n  \n  el = patient.tag('birthplace');\n  var birthplace_dict = parseAddress(el);\n  \n  el = patient.tag('guardian');\n  var guardian_relationship = el.tag('code').attr('displayName'),\n      guardian_relationship_code = el.tag('code').attr('code'),\n      guardian_home = el.tag('telecom').attr('value');\n  \n  el = el.tag('guardianPerson').tag('name');\n  var guardian_name_dict = parseName(el);\n  \n  el = patient.tag('guardian').tag('addr');\n  var guardian_address_dict = parseAddress(el);\n  \n  el = patient.tag('providerOrganization');\n  var provider_organization = el.tag('name').val(),\n      provider_phones = parsePhones(el.immediateChildrenTags('telecom')),\n      provider_ids = parseIds(el.immediateChildrenTags('id')),\n      provider_address_dict = parseAddress(el.tag('addr'));\n\n  el = demographics.immediateChildrenTags('participant');\n\n  var patient_contacts = el.map(function(tag) {\n    tag = tag.tag('associatedEntity');\n\n    return {\n      relationship: Core.Codes.role(tag.attr('classCode')),\n        relationship_code: {\n        code: tag.tag('code').attr('code'),\n        displayName: tag.tag('code').attr('displayName'),\n      },\n      phones: parsePhones(tag.immediateChildrenTags('telecom')),\n      name: parseName(tag.tag('associatedPerson').tag('name'))\n    }\n  });\n  \n  data = {\n    name: patient_name_dict,\n    dob: dob,\n    gender: gender,\n    mrn_number: mrn_number,\n    marital_status: marital_status,\n    address: patient_address_dict,\n    phones: phones,\n    email: email,\n    language: language,\n    race: race,\n    ethnicity: ethnicity,\n    religion: religion,\n    birthplace: {\n      state: birthplace_dict.state,\n      zip: birthplace_dict.zip,\n      country: birthplace_dict.country\n    },\n    guardian: {\n      name: {\n        given: guardian_name_dict.given,\n        family: guardian_name_dict.family\n      },\n      relationship: guardian_relationship,\n      relationship_code: guardian_relationship_code,\n      address: guardian_address_dict,\n      phone: {\n        home: guardian_home\n      }\n    },\n    patient_contacts: patient_contacts,\n    provider: {\n        ids: provider_ids,\n        organization: provider_organization,\n      phones: provider_phones,\n      address: provider_address_dict\n    }\n  };\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA encounters section\n */\n\nParsers.CCDA.encounters = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var parseIds = Documents.parseIds;\n  var data = [], el;\n  \n  var encounters = ccda.section('encounters');\n  \n  encounters.entries().each(function(entry) {\n    \n    var date = parseDate(entry.tag('effectiveTime').attr('value'));\n    \n    el = entry.tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName'),\n        code_system_version = el.attr('codeSystemVersion');\n    \n    // translation\n    el = entry.tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n    // performer\n    el = entry.tag('performer').tag('code');\n    var performer_name = el.attr('displayName'),\n        performer_code = el.attr('code'),\n        performer_code_system = el.attr('codeSystem'),\n        performer_code_system_name = el.attr('codeSystemName'),\n        performer_ids = parseIds(entry.tag('performer').tag('assignedEntity').immediateChildrenTags('id'));\n\n    // participant => location\n    el = entry.tag('participant');\n    var organization = el.tag('code').attr('displayName');\n    \n    var location_dict = parseAddress(el);\n    location_dict.organization = organization;\n\n    // findings\n    var findings = [];\n    var findingEls = entry.elsByTag('entryRelationship');\n    for (var i = 0; i < findingEls.length; i++) {\n      el = findingEls[i].tag('value');\n      findings.push({\n        name: el.attr('displayName'),\n        code: el.attr('code'),\n        code_system: el.attr('codeSystem')\n      });\n    }\n    \n    data.push({\n      date: date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      code_system_version: code_system_version,\n      findings: findings,\n      translation: {\n        name: translation_name,\n        code: translation_code,\n        code_system: translation_code_system,\n        code_system_name: translation_code_system_name\n      },\n      performer: {\n        ids: performer_ids,\n        name: performer_name,\n        code: performer_code,\n        code_system: performer_code_system,\n        code_system_name: performer_code_system_name\n      },\n      location: location_dict\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for any freetext section (i.e., contains just a single <text> element)\n */\n\nParsers.CCDA.free_text = function (ccda, sectionName) {\n\n  var data = {};\n  \n  var doc = ccda.section(sectionName);\n  var text = Core.stripWhitespace(doc.tag('text').val());\n  \n  data = {\n    text: text\n  };\n\n  return data;\n};\n;\n\n/*\n * Parser for the CCDA functional & cognitive status\n */\n\nParsers.CCDA.functional_statuses = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var data = [], el;\n\n  var statuses = ccda.section('functional_statuses');\n\n  statuses.entries().each(function(entry) {\n\n    var date = parseDate(entry.tag('effectiveTime').attr('value'));\n    if (!date) {\n      date = parseDate(entry.tag('effectiveTime').tag('low').attr('value'));\n    }\n\n    el = entry.tag('value');\n\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n\n    data.push({\n      date: date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name\n    });\n  \n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA immunizations section\n */\n\nParsers.CCDA.immunizations = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var administeredData = [], declinedData = [], el, product;\n  \n  var immunizations = ccda.section('immunizations');\n  \n  immunizations.entries().each(function(entry) {\n    \n    // date\n    el = entry.tag('effectiveTime');\n    var date = parseDate(el.attr('value'));\n    if (!date) {\n      date = parseDate(el.tag('low').attr('value'));\n    }\n\n    // if 'declined' is true, this is a record that this vaccine WASN'T administered\n    el = entry.tag('substanceAdministration');\n    var declined = el.boolAttr('negationInd');\n\n    // product\n    product = entry.template('2.16.840.1.113883.10.20.22.4.54');\n    el = product.tag('code');\n    var product_name = el.attr('displayName'),\n        product_code = el.attr('code'),\n        product_code_system = el.attr('codeSystem'),\n        product_code_system_name = el.attr('codeSystemName');\n\n    // translation\n    el = product.tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n\n    // misc product details\n    el = product.tag('lotNumberText');\n    var lot_number = el.val();\n\n    el = product.tag('manufacturerOrganization');\n    var manufacturer_name = el.tag('name').val();\n    \n    // route\n    el = entry.tag('routeCode');\n    var route_name = el.attr('displayName'),\n        route_code = el.attr('code'),\n        route_code_system = el.attr('codeSystem'),\n        route_code_system_name = el.attr('codeSystemName');\n    \n    // instructions\n    el = entry.template('2.16.840.1.113883.10.20.22.4.20');\n    var instructions_text = Core.stripWhitespace(el.tag('text').val());\n    el = el.tag('code');\n    var education_name = el.attr('displayName'),\n        education_code = el.attr('code'),\n        education_code_system = el.attr('codeSystem');\n\n    // dose\n    el = entry.tag('doseQuantity');\n    var dose_value = el.attr('value'),\n        dose_unit = el.attr('unit');\n    \n    var data = (declined) ? declinedData : administeredData;\n    data.push({\n      date: date,\n      product: {\n        name: product_name,\n        code: product_code,\n        code_system: product_code_system,\n        code_system_name: product_code_system_name,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        lot_number: lot_number,\n        manufacturer_name: manufacturer_name\n      },\n      dose_quantity: {\n        value: dose_value,\n        unit: dose_unit\n      },\n      route: {\n        name: route_name,\n        code: route_code,\n        code_system: route_code_system,\n        code_system_name: route_code_system_name\n      },\n      instructions: instructions_text,\n      education_type: {\n        name: education_name,\n        code: education_code,\n        code_system: education_code_system\n      }\n    });\n  });\n  \n  return {\n    administered: administeredData,\n    declined: declinedData\n  };\n};\n;\n\n/*\n * Parser for the CCDA \"plan of care\" section\n */\n\nParsers.CCDA.instructions = function (ccda) {\n  \n  var data = [], el;\n  \n  var instructions = ccda.section('instructions');\n  \n  instructions.entries().each(function(entry) {\n\n    el = entry.tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n\n    var text = Core.stripWhitespace(entry.tag('text').val());\n    \n    data.push({\n      text: text,\n      name: name,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA results (labs) section\n */\n\nParsers.CCDA.results = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var results = ccda.section('results');\n  \n  results.entries().each(function(entry) {\n    \n    // panel\n    el = entry.tag('code');\n    var panel_name = el.attr('displayName'),\n        panel_code = el.attr('code'),\n        panel_code_system = el.attr('codeSystem'),\n        panel_code_system_name = el.attr('codeSystemName');\n    \n    var observation;\n    var tests = entry.elsByTag('observation');\n    var tests_data = [];\n    \n    for (var i = 0; i < tests.length; i++) {\n      observation = tests[i];\n      \n      var date = parseDate(observation.tag('effectiveTime').attr('value'));\n      \n      el = observation.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n\n      if (!name) {\n        name = Core.stripWhitespace(observation.tag('text').val());\n      }\n      \n      el = observation.tag('translation');\n      var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n      el = observation.tag('value');\n      var value = el.attr('value'),\n          unit = el.attr('unit');\n      // We could look for xsi:type=\"PQ\" (physical quantity) but it seems better\n      // not to trust that that field has been used correctly...\n      if (value && !isNaN(parseFloat(value))) {\n        value = parseFloat(value);\n      }\n      if (!value) {\n        value = el.val(); // look for free-text values\n      }\n      \n      el = observation.tag('referenceRange');\n      var reference_range_text = Core.stripWhitespace(el.tag('observationRange').tag('text').val()),\n          reference_range_low_unit = el.tag('observationRange').tag('low').attr('unit'),\n          reference_range_low_value = el.tag('observationRange').tag('low').attr('value'),\n          reference_range_high_unit = el.tag('observationRange').tag('high').attr('unit'),\n          reference_range_high_value = el.tag('observationRange').tag('high').attr('value');\n      \n      tests_data.push({\n        date: date,\n        name: name,\n        value: value,\n        unit: unit,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        },\n        reference_range: {\n          text: reference_range_text,\n          low_unit: reference_range_low_unit,\n          low_value: reference_range_low_value,\n          high_unit: reference_range_high_unit,\n          high_value: reference_range_high_value,\n        }\n      });\n    }\n    \n    data.push({\n      name: panel_name,\n      code: panel_code,\n      code_system: panel_code_system,\n      code_system_name: panel_code_system_name,\n      tests: tests_data\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA medications section\n */\n\nParsers.CCDA.medications = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var data = [], el;\n  \n  var medications = ccda.section('medications');\n\n\n  medications.entries().each(function(entry) {\n    var status = entry.tag('value').attr('displayName');\n\n    var reference = entry.tag('reference').attr('value');\n    var referenceTitle = entry.tag('text').val();\n\n    if (reference != null) {\n      var referenceSig = ccda.content('sig-' + reference.split('-')[1]).val();\n    }\n\n    el = entry.tag('text');\n    var sig = Core.stripWhitespace(el.val());\n\n    var effectiveTimes = entry.elsByTag('effectiveTime');\n\n    el = effectiveTimes[0]; // the first effectiveTime is the med start date\n    var start_date = null, end_date = null;\n    if (el) {\n      start_date = parseDate(el.tag('low').attr('value'));\n      end_date = parseDate(el.tag('high').attr('value'));\n    }\n\n    // the second effectiveTime might the schedule period or it might just\n    // be a random effectiveTime from further in the entry... xsi:type should tell us\n    el = effectiveTimes[1];\n    var schedule_type = null, schedule_period_value = null, schedule_period_unit = null;\n    if (el && el.attr('xsi:type') === 'PIVL_TS') {\n      var institutionSpecified = el.attr('institutionSpecified');\n      if (institutionSpecified === 'true') {\n        schedule_type= 'frequency';\n      } else if (institutionSpecified === 'false') {\n        schedule_type = 'interval';\n      }\n\n      el = el.tag('period');\n      schedule_period_value = el.attr('value');\n      schedule_period_unit = el.attr('unit');\n    }\n    \n    el = entry.tag('manufacturedProduct').tag('code');\n    var product_name = el.attr('displayName'),\n        product_code = el.attr('code'),\n        product_code_system = el.attr('codeSystem');\n\n    var product_original_text = null;\n    el = entry.tag('manufacturedProduct').tag('originalText');\n    if (!el.isEmpty()) {\n      product_original_text = Core.stripWhitespace(el.val());\n    }\n    // if we don't have a product name yet, try the originalText version\n    if (!product_name && product_original_text) {\n      product_name = product_original_text;\n    }\n    \n    el = entry.tag('manufacturedProduct').tag('translation');\n    var translation_name = el.attr('displayName'),\n        translation_code = el.attr('code'),\n        translation_code_system = el.attr('codeSystem'),\n        translation_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.tag('doseQuantity');\n    var dose_value = el.attr('value'),\n        dose_unit = el.attr('unit');\n    \n    el = entry.tag('rateQuantity');\n    var rate_quantity_value = el.attr('value'),\n        rate_quantity_unit = el.attr('unit');\n    \n    el = entry.tag('precondition').tag('value');\n    var precondition_name = el.attr('displayName'),\n        precondition_code = el.attr('code'),\n        precondition_code_system = el.attr('codeSystem');\n    \n    el = entry.template('2.16.840.1.113883.10.20.22.4.19').tag('value');\n    var reason_name = el.attr('displayName'),\n        reason_code = el.attr('code'),\n        reason_code_system = el.attr('codeSystem');\n    \n    el = entry.tag('routeCode');\n    var route_name = el.attr('displayName'),\n        route_code = el.attr('code'),\n        route_code_system = el.attr('codeSystem'),\n        route_code_system_name = el.attr('codeSystemName');\n    \n    // participant/playingEntity => vehicle\n    el = entry.tag('participant').tag('playingEntity');\n    var vehicle_name = el.tag('name').val();\n\n    el = el.tag('code');\n    // prefer the code vehicle_name but fall back to the non-coded one\n    vehicle_name = el.attr('displayName') || vehicle_name;\n    var vehicle_code = el.attr('code'),\n        vehicle_code_system = el.attr('codeSystem'),\n        vehicle_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.tag('administrationUnitCode');\n    var administration_name = el.attr('displayName'),\n        administration_code = el.attr('code'),\n        administration_code_system = el.attr('codeSystem'),\n        administration_code_system_name = el.attr('codeSystemName');\n    \n    // performer => prescriber\n    el = entry.tag('performer');\n    var prescriber_organization = el.tag('name').val(),\n        prescriber_person = null;\n    \n    data.push({\n      reference: reference,\n      reference_title: referenceTitle,\n      reference_sig: referenceSig,\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      status: status,\n      text: sig,\n      product: {\n        name: product_name,\n        code: product_code,\n        code_system: product_code_system,\n        text: product_original_text,\n        translation: {\n          name: translation_name,\n          code: translation_code,\n          code_system: translation_code_system,\n          code_system_name: translation_code_system_name\n        }\n      },\n      dose_quantity: {\n        value: dose_value,\n        unit: dose_unit\n      },\n      rate_quantity: {\n        value: rate_quantity_value,\n        unit: rate_quantity_unit\n      },\n      precondition: {\n        name: precondition_name,\n        code: precondition_code,\n        code_system: precondition_code_system\n      },\n      reason: {\n        name: reason_name,\n        code: reason_code,\n        code_system: reason_code_system\n      },\n      route: {\n        name: route_name,\n        code: route_code,\n        code_system: route_code_system,\n        code_system_name: route_code_system_name\n      },\n      schedule: {\n        type: schedule_type,\n        period_value: schedule_period_value,\n        period_unit: schedule_period_unit\n      },\n      vehicle: {\n        name: vehicle_name,\n        code: vehicle_code,\n        code_system: vehicle_code_system,\n        code_system_name: vehicle_code_system_name\n      },\n      administration: {\n        name: administration_name,\n        code: administration_code,\n        code_system: administration_code_system,\n        code_system_name: administration_code_system_name\n      },\n      prescriber: {\n        organization: prescriber_organization,\n        person: prescriber_person\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA problems section\n */\n\nParsers.CCDA.problems = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var problems = ccda.section('problems');\n  \n  problems.entries().each(function(entry) {\n\n    var reference = entry.tag('reference').attr('value');\n\n    var referenceTitle = entry.tag('text').val();\n\n    el = entry.tag('effectiveTime');\n    var start_date = parseDate(el.tag('low').attr('value')),\n        end_date = parseDate(el.tag('high').attr('value'));\n    \n    el = entry.template('2.16.840.1.113883.10.20.22.4.4').tag('value');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem'),\n        code_system_name = el.attr('codeSystemName');\n    \n    el = entry.template('2.16.840.1.113883.10.20.22.4.4').tag('translation');\n    var translation_name = el.attr('displayName'),\n      translation_code = el.attr('code'),\n      translation_code_system = el.attr('codeSystem'),\n      translation_code_system_name = el.attr('codeSystemName');\n    \n    el = entry.template('2.16.840.1.113883.10.20.22.4.6');\n    var status = el.tag('value').attr('displayName');\n    \n    var age = null;\n    el = entry.template('2.16.840.1.113883.10.20.22.4.31');\n    if (!el.isEmpty()) {\n      age = parseFloat(el.tag('value').attr('value'));\n    }\n\n    el = entry.template('2.16.840.1.113883.10.20.22.4.64');\n    var comment = Core.stripWhitespace(el.tag('text').val());\n    \n    data.push({\n      reference: reference,\n      reference_title: referenceTitle,\n      date_range: {\n        start: start_date,\n        end: end_date\n      },\n      name: name,\n      status: status,\n      age: age,\n      code: code,\n      code_system: code_system,\n      code_system_name: code_system_name,\n      translation: {\n        name: translation_name,\n        code: translation_code,\n        code_system: translation_code_system,\n        code_system_name: translation_code_system_name\n      },\n      comment: comment\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA procedures section\n */\n\nParsers.CCDA.procedures = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var procedures = ccda.section('procedures');\n  \n  procedures.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var date = parseDate(el.attr('value'));\n    \n    el = entry.tag('code');\n    var name = el.attr('displayName'),\n        code = el.attr('code'),\n        code_system = el.attr('codeSystem');\n\n    if (!name) {\n      name = Core.stripWhitespace(entry.tag('originalText').val());\n    }\n    \n    // 'specimen' tag not always present\n    el = entry.tag('specimen').tag('code');\n    var specimen_name = el.attr('displayName'),\n        specimen_code = el.attr('code'),\n        specimen_code_system = el.attr('codeSystem');\n    \n    el = entry.tag('performer').tag('addr');\n    var organization = el.tag('name').val(),\n        phone = el.tag('telecom').attr('value');\n    \n    var performer_dict = parseAddress(el);\n    performer_dict.organization = organization;\n    performer_dict.phone = phone;\n    \n    // participant => device\n    el = entry.template('2.16.840.1.113883.10.20.22.4.37').tag('code');\n    var device_name = el.attr('displayName'),\n        device_code = el.attr('code'),\n        device_code_system = el.attr('codeSystem');\n    \n    data.push({\n      date: date,\n      name: name,\n      code: code,\n      code_system: code_system,\n      specimen: {\n        name: specimen_name,\n        code: specimen_code,\n        code_system: specimen_code_system\n      },\n      performer: performer_dict,\n      device: {\n        name: device_name,\n        code: device_code,\n        code_system: device_code_system\n      }\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA smoking status in social history section\n */\n\nParsers.CCDA.smoking_status = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data, el;\n\n  var name = null,\n      code = null,\n      code_system = null,\n      code_system_name = null,\n      entry_date = null;\n\n  // We can parse all of the social_history sections,\n  // but in practice, this section seems to be used for\n  // smoking status, so we're just going to break that out.\n  // And we're just looking for the first non-empty one.\n  var social_history = ccda.section('social_history');\n  var entries = social_history.entries();\n  for (var i=0; i < entries.length; i++) {\n    var entry = entries[i];\n\n    var smoking_status = entry.template('2.16.840.1.113883.10.20.22.4.78');\n    if (smoking_status.isEmpty()) {\n      smoking_status = entry.template('2.16.840.1.113883.10.22.4.78');\n    }\n    if (smoking_status.isEmpty()) {\n      continue;\n    }\n\n    el = smoking_status.tag('effectiveTime');\n    entry_date = parseDate(el.attr('value'));\n\n    el = smoking_status.tag('value');\n    name = el.attr('displayName');\n    code = el.attr('code');\n    code_system = el.attr('codeSystem');\n    code_system_name = el.attr('codeSystemName');\n\n    if (name) {\n      break;\n    }\n  }\n\n  data = {\n    date: entry_date,\n    name: name,\n    code: code,\n    code_system: code_system,\n    code_system_name: code_system_name\n  };\n  \n  return data;\n};\n;\n\n/*\n * Parser for the CCDA vitals section\n */\n\nParsers.CCDA.vitals = function (ccda) {\n  \n  var parseDate = Documents.parseDate;\n  var parseName = Documents.parseName;\n  var parseAddress = Documents.parseAddress;\n  var data = [], el;\n  \n  var vitals = ccda.section('vitals');\n  \n  vitals.entries().each(function(entry) {\n    \n    el = entry.tag('effectiveTime');\n    var entry_date = parseDate(el.attr('value'));\n    \n    var result;\n    var results = entry.elsByTag('component');\n    var results_data = [];\n    \n    for (var i = 0; i < results.length; i++) {\n      result = results[i];\n      \n      el = result.tag('code');\n      var name = el.attr('displayName'),\n          code = el.attr('code'),\n          code_system = el.attr('codeSystem'),\n          code_system_name = el.attr('codeSystemName');\n      \n      el = result.tag('value');\n      var value = parseFloat(el.attr('value')),\n          unit = el.attr('unit');\n      \n      results_data.push({\n        name: name,\n        code: code,\n        code_system: code_system,\n        code_system_name: code_system_name,\n        value: value,\n        unit: unit\n      });\n    }\n    \n    data.push({\n      date: entry_date,\n      results: results_data\n    });\n  });\n  \n  return data;\n};\n;\n\n/*\n * ...\n */\n\n/* exported Renderers */\nvar Renderers = (function () {\n  \n  var method = function () {};\n  \n  return {\n    method: method\n  };\n  \n})();\n;\n\n/*\n * ...\n */\n\n/* exported BlueButton */\nvar BlueButton = function (source, opts) {\n  var type, parsedData, parsedDocument;\n  \n  // Look for options\n  if (!opts) opts = {};\n  \n  // Detect and parse the source data\n  parsedData = Core.parseData(source);\n  \n  // Detect and parse the document\n  if (opts.parser) {\n    \n    // TODO: parse the document with provided custom parser\n    parsedDocument = opts.parser();\n    \n  } else {\n    type = Documents.detect(parsedData);\n    switch (type) {\n      case 'c32':\n        parsedData = Documents.C32.process(parsedData);\n        parsedDocument = Parsers.C32.run(parsedData);\n        break;\n      case 'ccda':\n        parsedData = Documents.CCDA.process(parsedData);\n        parsedDocument = Parsers.CCDA.run(parsedData);\n        break;\n      case 'json':\n        /* Expects a call like:\n         * BlueButton(json string, {\n         *   generatorType: 'ccda',\n         *   template: < EJS file contents >\n         * })\n         * The returned \"type\" will be the requested type (not \"json\")\n         * and the XML will be turned as a string in the 'data' key\n         */\n        switch (opts.generatorType) {\n          // only the unit tests ever need to worry about this testingMode argument\n          case 'c32':\n            type = 'c32';\n            parsedDocument = Generators.C32.run(parsedData, opts.template, opts.testingMode);\n            break;\n          case 'ccda':\n            type = 'ccda';\n            parsedDocument = Generators.CCDA.run(parsedData, opts.template, opts.testingMode);\n            break;\n        }\n    }\n  }\n  \n  return {\n    type: type,\n    data: parsedDocument,\n    source: parsedData\n  };\n\n};\n\n\nreturn BlueButton;\n\n}));\n","/**\n * material-design-lite - Material Design Components in CSS, JS and HTML\n * @version v1.1.0\n * @license Apache-2.0\n * @copyright 2015 Google, Inc.\n * @link https://github.com/google/material-design-lite\n */\n!function(){\"use strict\";function e(e,t){if(e){if(t.element_.classList.contains(t.CssClasses_.MDL_JS_RIPPLE_EFFECT)){var s=document.createElement(\"span\");s.classList.add(t.CssClasses_.MDL_RIPPLE_CONTAINER),s.classList.add(t.CssClasses_.MDL_JS_RIPPLE_EFFECT);var i=document.createElement(\"span\");i.classList.add(t.CssClasses_.MDL_RIPPLE),s.appendChild(i),e.appendChild(s)}e.addEventListener(\"click\",function(s){s.preventDefault();var i=e.href.split(\"#\")[1],n=t.element_.querySelector(\"#\"+i);t.resetTabState_(),t.resetPanelState_(),e.classList.add(t.CssClasses_.ACTIVE_CLASS),n.classList.add(t.CssClasses_.ACTIVE_CLASS)})}}function t(e,t,s,i){function n(){var n=e.href.split(\"#\")[1],a=i.content_.querySelector(\"#\"+n);i.resetTabState_(t),i.resetPanelState_(s),e.classList.add(i.CssClasses_.IS_ACTIVE),a.classList.add(i.CssClasses_.IS_ACTIVE)}if(i.tabBar_.classList.contains(i.CssClasses_.JS_RIPPLE_EFFECT)){var a=document.createElement(\"span\");a.classList.add(i.CssClasses_.RIPPLE_CONTAINER),a.classList.add(i.CssClasses_.JS_RIPPLE_EFFECT);var l=document.createElement(\"span\");l.classList.add(i.CssClasses_.RIPPLE),a.appendChild(l),e.appendChild(a)}e.addEventListener(\"click\",function(t){\"#\"===e.getAttribute(\"href\").charAt(0)&&(t.preventDefault(),n())}),e.show=n,e.addEventListener(\"click\",function(n){n.preventDefault();var a=e.href.split(\"#\")[1],l=i.content_.querySelector(\"#\"+a);i.resetTabState_(t),i.resetPanelState_(s),e.classList.add(i.CssClasses_.IS_ACTIVE),l.classList.add(i.CssClasses_.IS_ACTIVE)})}var s={upgradeDom:function(e,t){},upgradeElement:function(e,t){},upgradeElements:function(e){},upgradeAllRegistered:function(){},registerUpgradedCallback:function(e,t){},register:function(e){},downgradeElements:function(e){}};s=function(){function e(e,t){for(var s=0;s<h.length;s++)if(h[s].className===e)return\"undefined\"!=typeof t&&(h[s]=t),h[s];return!1}function t(e){var t=e.getAttribute(\"data-upgraded\");return null===t?[\"\"]:t.split(\",\")}function s(e,s){var i=t(e);return-1!==i.indexOf(s)}function i(t,s){if(\"undefined\"==typeof t&&\"undefined\"==typeof s)for(var a=0;a<h.length;a++)i(h[a].className,h[a].cssClass);else{var l=t;if(\"undefined\"==typeof s){var o=e(l);o&&(s=o.cssClass)}for(var r=document.querySelectorAll(\".\"+s),_=0;_<r.length;_++)n(r[_],l)}}function n(i,n){if(!(\"object\"==typeof i&&i instanceof Element))throw new Error(\"Invalid argument provided to upgrade MDL element.\");var a=t(i),l=[];if(n)s(i,n)||l.push(e(n));else{var o=i.classList;h.forEach(function(e){o.contains(e.cssClass)&&-1===l.indexOf(e)&&!s(i,e.className)&&l.push(e)})}for(var r,_=0,d=l.length;d>_;_++){if(r=l[_],!r)throw new Error(\"Unable to find a registered component for the given class.\");a.push(r.className),i.setAttribute(\"data-upgraded\",a.join(\",\"));var C=new r.classConstructor(i);C[p]=r,c.push(C);for(var u=0,E=r.callbacks.length;E>u;u++)r.callbacks[u](i);r.widget&&(i[r.className]=C);var m=document.createEvent(\"Events\");m.initEvent(\"mdl-componentupgraded\",!0,!0),i.dispatchEvent(m)}}function a(e){Array.isArray(e)||(e=\"function\"==typeof e.item?Array.prototype.slice.call(e):[e]);for(var t,s=0,i=e.length;i>s;s++)t=e[s],t instanceof HTMLElement&&(n(t),t.children.length>0&&a(t.children))}function l(t){var s=\"undefined\"==typeof t.widget&&\"undefined\"==typeof t.widget,i=!0;s||(i=t.widget||t.widget);var n={classConstructor:t.constructor||t.constructor,className:t.classAsString||t.classAsString,cssClass:t.cssClass||t.cssClass,widget:i,callbacks:[]};if(h.forEach(function(e){if(e.cssClass===n.cssClass)throw new Error(\"The provided cssClass has already been registered: \"+e.cssClass);if(e.className===n.className)throw new Error(\"The provided className has already been registered\")}),t.constructor.prototype.hasOwnProperty(p))throw new Error(\"MDL component classes must not have \"+p+\" defined as a property.\");var a=e(t.classAsString,n);a||h.push(n)}function o(t,s){var i=e(t);i&&i.callbacks.push(s)}function r(){for(var e=0;e<h.length;e++)i(h[e].className)}function _(e){var t=c.indexOf(e);c.splice(t,1);var s=e.element_.getAttribute(\"data-upgraded\").split(\",\"),i=s.indexOf(e[p].classAsString);s.splice(i,1),e.element_.setAttribute(\"data-upgraded\",s.join(\",\"));var n=document.createEvent(\"Events\");n.initEvent(\"mdl-componentdowngraded\",!0,!0),e.element_.dispatchEvent(n)}function d(e){var t=function(e){c.filter(function(t){return t.element_===e}).forEach(_)};if(e instanceof Array||e instanceof NodeList)for(var s=0;s<e.length;s++)t(e[s]);else{if(!(e instanceof Node))throw new Error(\"Invalid argument provided to downgrade MDL nodes.\");t(e)}}var h=[],c=[],p=\"mdlComponentConfigInternal_\";return{upgradeDom:i,upgradeElement:n,upgradeElements:a,upgradeAllRegistered:r,registerUpgradedCallback:o,register:l,downgradeElements:d}}(),s.ComponentConfigPublic,s.ComponentConfig,s.Component,s.upgradeDom=s.upgradeDom,s.upgradeElement=s.upgradeElement,s.upgradeElements=s.upgradeElements,s.upgradeAllRegistered=s.upgradeAllRegistered,s.registerUpgradedCallback=s.registerUpgradedCallback,s.register=s.register,s.downgradeElements=s.downgradeElements,window.componentHandler=s,window.componentHandler=s,window.addEventListener(\"load\",function(){\"classList\"in document.createElement(\"div\")&&\"querySelector\"in document&&\"addEventListener\"in window&&Array.prototype.forEach?(document.documentElement.classList.add(\"mdl-js\"),s.upgradeAllRegistered()):(s.upgradeElement=function(){},s.register=function(){})}),Date.now||(Date.now=function(){return(new Date).getTime()},Date.now=Date.now);for(var i=[\"webkit\",\"moz\"],n=0;n<i.length&&!window.requestAnimationFrame;++n){var a=i[n];window.requestAnimationFrame=window[a+\"RequestAnimationFrame\"],window.cancelAnimationFrame=window[a+\"CancelAnimationFrame\"]||window[a+\"CancelRequestAnimationFrame\"],window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}if(/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent)||!window.requestAnimationFrame||!window.cancelAnimationFrame){var l=0;window.requestAnimationFrame=function(e){var t=Date.now(),s=Math.max(l+16,t);return setTimeout(function(){e(l=s)},s-t)},window.cancelAnimationFrame=clearTimeout,window.requestAnimationFrame=window.requestAnimationFrame,window.cancelAnimationFrame=window.cancelAnimationFrame}var o=function(e){this.element_=e,this.init()};window.MaterialButton=o,o.prototype.Constant_={},o.prototype.CssClasses_={RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_CONTAINER:\"mdl-button__ripple-container\",RIPPLE:\"mdl-ripple\"},o.prototype.blurHandler_=function(e){e&&this.element_.blur()},o.prototype.disable=function(){this.element_.disabled=!0},o.prototype.disable=o.prototype.disable,o.prototype.enable=function(){this.element_.disabled=!1},o.prototype.enable=o.prototype.enable,o.prototype.init=function(){if(this.element_){if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleElement_=document.createElement(\"span\"),this.rippleElement_.classList.add(this.CssClasses_.RIPPLE),e.appendChild(this.rippleElement_),this.boundRippleBlurHandler=this.blurHandler_.bind(this),this.rippleElement_.addEventListener(\"mouseup\",this.boundRippleBlurHandler),this.element_.appendChild(e)}this.boundButtonBlurHandler=this.blurHandler_.bind(this),this.element_.addEventListener(\"mouseup\",this.boundButtonBlurHandler),this.element_.addEventListener(\"mouseleave\",this.boundButtonBlurHandler)}},s.register({constructor:o,classAsString:\"MaterialButton\",cssClass:\"mdl-js-button\",widget:!0});var r=function(e){this.element_=e,this.init()};window.MaterialCheckbox=r,r.prototype.Constant_={TINY_TIMEOUT:.001},r.prototype.CssClasses_={INPUT:\"mdl-checkbox__input\",BOX_OUTLINE:\"mdl-checkbox__box-outline\",FOCUS_HELPER:\"mdl-checkbox__focus-helper\",TICK_OUTLINE:\"mdl-checkbox__tick-outline\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-checkbox__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\",IS_UPGRADED:\"is-upgraded\"},r.prototype.onChange_=function(e){this.updateClasses_()},r.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},r.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},r.prototype.onMouseUp_=function(e){this.blur_()},r.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},r.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},r.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},r.prototype.checkToggleState=r.prototype.checkToggleState,r.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},r.prototype.checkDisabled=r.prototype.checkDisabled,r.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},r.prototype.disable=r.prototype.disable,r.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},r.prototype.enable=r.prototype.enable,r.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},r.prototype.check=r.prototype.check,r.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},r.prototype.uncheck=r.prototype.uncheck,r.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.BOX_OUTLINE);var t=document.createElement(\"span\");t.classList.add(this.CssClasses_.FOCUS_HELPER);var s=document.createElement(\"span\");if(s.classList.add(this.CssClasses_.TICK_OUTLINE),e.appendChild(s),this.element_.appendChild(t),this.element_.appendChild(e),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundRippleMouseUp);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(i),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundInputOnChange),this.inputElement_.addEventListener(\"focus\",this.boundInputOnFocus),this.inputElement_.addEventListener(\"blur\",this.boundInputOnBlur),this.element_.addEventListener(\"mouseup\",this.boundElementMouseUp),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:r,classAsString:\"MaterialCheckbox\",cssClass:\"mdl-js-checkbox\",widget:!0});var _=function(e){this.element_=e,this.init()};window.MaterialIconToggle=_,_.prototype.Constant_={TINY_TIMEOUT:.001},_.prototype.CssClasses_={INPUT:\"mdl-icon-toggle__input\",JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-icon-toggle__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\"},_.prototype.onChange_=function(e){this.updateClasses_()},_.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},_.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},_.prototype.onMouseUp_=function(e){this.blur_()},_.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},_.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},_.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},_.prototype.checkToggleState=_.prototype.checkToggleState,_.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},_.prototype.checkDisabled=_.prototype.checkDisabled,_.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},_.prototype.disable=_.prototype.disable,_.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},_.prototype.enable=_.prototype.enable,_.prototype.check=function(){this.inputElement_.checked=!0,this.updateClasses_()},_.prototype.check=_.prototype.check,_.prototype.uncheck=function(){this.inputElement_.checked=!1,this.updateClasses_()},_.prototype.uncheck=_.prototype.uncheck,_.prototype.init=function(){if(this.element_){if(this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT),this.element_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.JS_RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.boundRippleMouseUp=this.onMouseUp_.bind(this),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundRippleMouseUp);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(e),this.element_.appendChild(this.rippleContainerElement_)}this.boundInputOnChange=this.onChange_.bind(this),this.boundInputOnFocus=this.onFocus_.bind(this),this.boundInputOnBlur=this.onBlur_.bind(this),this.boundElementOnMouseUp=this.onMouseUp_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundInputOnChange),this.inputElement_.addEventListener(\"focus\",this.boundInputOnFocus),this.inputElement_.addEventListener(\"blur\",this.boundInputOnBlur),this.element_.addEventListener(\"mouseup\",this.boundElementOnMouseUp),this.updateClasses_(),this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:_,classAsString:\"MaterialIconToggle\",cssClass:\"mdl-js-icon-toggle\",widget:!0});var d=function(e){this.element_=e,this.init()};window.MaterialMenu=d,d.prototype.Constant_={TRANSITION_DURATION_SECONDS:.3,TRANSITION_DURATION_FRACTION:.8,CLOSE_TIMEOUT:150},d.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32,UP_ARROW:38,DOWN_ARROW:40},d.prototype.CssClasses_={CONTAINER:\"mdl-menu__container\",OUTLINE:\"mdl-menu__outline\",ITEM:\"mdl-menu__item\",ITEM_RIPPLE_CONTAINER:\"mdl-menu__item-ripple-container\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE:\"mdl-ripple\",IS_UPGRADED:\"is-upgraded\",IS_VISIBLE:\"is-visible\",IS_ANIMATING:\"is-animating\",BOTTOM_LEFT:\"mdl-menu--bottom-left\",BOTTOM_RIGHT:\"mdl-menu--bottom-right\",TOP_LEFT:\"mdl-menu--top-left\",TOP_RIGHT:\"mdl-menu--top-right\",UNALIGNED:\"mdl-menu--unaligned\"},d.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_),this.container_=e;var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.OUTLINE),this.outline_=t,e.insertBefore(t,this.element_);var s=this.element_.getAttribute(\"for\")||this.element_.getAttribute(\"data-mdl-for\"),i=null;s&&(i=document.getElementById(s),i&&(this.forElement_=i,i.addEventListener(\"click\",this.handleForClick_.bind(this)),i.addEventListener(\"keydown\",this.handleForKeyboardEvent_.bind(this))));var n=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM);this.boundItemKeydown_=this.handleItemKeyboardEvent_.bind(this),this.boundItemClick_=this.handleItemClick_.bind(this);for(var a=0;a<n.length;a++)n[a].addEventListener(\"click\",this.boundItemClick_),n[a].tabIndex=\"-1\",n[a].addEventListener(\"keydown\",this.boundItemKeydown_);if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT))for(this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),a=0;a<n.length;a++){var l=n[a],o=document.createElement(\"span\");o.classList.add(this.CssClasses_.ITEM_RIPPLE_CONTAINER);var r=document.createElement(\"span\");r.classList.add(this.CssClasses_.RIPPLE),o.appendChild(r),l.appendChild(o),l.classList.add(this.CssClasses_.RIPPLE_EFFECT)}this.element_.classList.contains(this.CssClasses_.BOTTOM_LEFT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_LEFT),this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)&&this.outline_.classList.add(this.CssClasses_.BOTTOM_RIGHT),this.element_.classList.contains(this.CssClasses_.TOP_LEFT)&&this.outline_.classList.add(this.CssClasses_.TOP_LEFT),this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)&&this.outline_.classList.add(this.CssClasses_.TOP_RIGHT),this.element_.classList.contains(this.CssClasses_.UNALIGNED)&&this.outline_.classList.add(this.CssClasses_.UNALIGNED),e.classList.add(this.CssClasses_.IS_UPGRADED)}},d.prototype.handleForClick_=function(e){if(this.element_&&this.forElement_){var t=this.forElement_.getBoundingClientRect(),s=this.forElement_.parentElement.getBoundingClientRect();this.element_.classList.contains(this.CssClasses_.UNALIGNED)||(this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?(this.container_.style.right=s.right-t.right+\"px\",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+\"px\"):this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?(this.container_.style.left=this.forElement_.offsetLeft+\"px\",this.container_.style.bottom=s.bottom-t.top+\"px\"):this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(this.container_.style.right=s.right-t.right+\"px\",this.container_.style.bottom=s.bottom-t.top+\"px\"):(this.container_.style.left=this.forElement_.offsetLeft+\"px\",this.container_.style.top=this.forElement_.offsetTop+this.forElement_.offsetHeight+\"px\"))}this.toggle(e)},d.prototype.handleForKeyboardEvent_=function(e){if(this.element_&&this.container_&&this.forElement_){var t=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM+\":not([disabled])\");t&&t.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)&&(e.keyCode===this.Keycodes_.UP_ARROW?(e.preventDefault(),t[t.length-1].focus()):e.keyCode===this.Keycodes_.DOWN_ARROW&&(e.preventDefault(),t[0].focus()))}},d.prototype.handleItemKeyboardEvent_=function(e){if(this.element_&&this.container_){var t=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM+\":not([disabled])\");if(t&&t.length>0&&this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)){var s=Array.prototype.slice.call(t).indexOf(e.target);if(e.keyCode===this.Keycodes_.UP_ARROW)e.preventDefault(),s>0?t[s-1].focus():t[t.length-1].focus();else if(e.keyCode===this.Keycodes_.DOWN_ARROW)e.preventDefault(),t.length>s+1?t[s+1].focus():t[0].focus();else if(e.keyCode===this.Keycodes_.SPACE||e.keyCode===this.Keycodes_.ENTER){e.preventDefault();var i=new MouseEvent(\"mousedown\");e.target.dispatchEvent(i),i=new MouseEvent(\"mouseup\"),e.target.dispatchEvent(i),e.target.click()}else e.keyCode===this.Keycodes_.ESCAPE&&(e.preventDefault(),this.hide())}}},d.prototype.handleItemClick_=function(e){e.target.hasAttribute(\"disabled\")?e.stopPropagation():(this.closing_=!0,window.setTimeout(function(e){this.hide(),this.closing_=!1}.bind(this),this.Constant_.CLOSE_TIMEOUT))},d.prototype.applyClip_=function(e,t){this.element_.classList.contains(this.CssClasses_.UNALIGNED)?this.element_.style.clip=\"\":this.element_.classList.contains(this.CssClasses_.BOTTOM_RIGHT)?this.element_.style.clip=\"rect(0 \"+t+\"px 0 \"+t+\"px)\":this.element_.classList.contains(this.CssClasses_.TOP_LEFT)?this.element_.style.clip=\"rect(\"+e+\"px 0 \"+e+\"px 0)\":this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?this.element_.style.clip=\"rect(\"+e+\"px \"+t+\"px \"+e+\"px \"+t+\"px)\":this.element_.style.clip=\"\"},d.prototype.removeAnimationEndListener_=function(e){e.target.classList.remove(d.prototype.CssClasses_.IS_ANIMATING)},d.prototype.addAnimationEndListener_=function(){this.element_.addEventListener(\"transitionend\",this.removeAnimationEndListener_),this.element_.addEventListener(\"webkitTransitionEnd\",this.removeAnimationEndListener_)},d.prototype.show=function(e){if(this.element_&&this.container_&&this.outline_){var t=this.element_.getBoundingClientRect().height,s=this.element_.getBoundingClientRect().width;this.container_.style.width=s+\"px\",this.container_.style.height=t+\"px\",this.outline_.style.width=s+\"px\",this.outline_.style.height=t+\"px\";for(var i=this.Constant_.TRANSITION_DURATION_SECONDS*this.Constant_.TRANSITION_DURATION_FRACTION,n=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM),a=0;a<n.length;a++){var l=null;l=this.element_.classList.contains(this.CssClasses_.TOP_LEFT)||this.element_.classList.contains(this.CssClasses_.TOP_RIGHT)?(t-n[a].offsetTop-n[a].offsetHeight)/t*i+\"s\":n[a].offsetTop/t*i+\"s\",n[a].style.transitionDelay=l}this.applyClip_(t,s),window.requestAnimationFrame(function(){this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.element_.style.clip=\"rect(0 \"+s+\"px \"+t+\"px 0)\",this.container_.classList.add(this.CssClasses_.IS_VISIBLE)}.bind(this)),this.addAnimationEndListener_();var o=function(t){t===e||this.closing_||t.target.parentNode===this.element_||(document.removeEventListener(\"click\",o),this.hide())}.bind(this);document.addEventListener(\"click\",o)}},d.prototype.show=d.prototype.show,d.prototype.hide=function(){if(this.element_&&this.container_&&this.outline_){for(var e=this.element_.querySelectorAll(\".\"+this.CssClasses_.ITEM),t=0;t<e.length;t++)e[t].style.removeProperty(\"transition-delay\");var s=this.element_.getBoundingClientRect(),i=s.height,n=s.width;this.element_.classList.add(this.CssClasses_.IS_ANIMATING),this.applyClip_(i,n),this.container_.classList.remove(this.CssClasses_.IS_VISIBLE),this.addAnimationEndListener_()}},d.prototype.hide=d.prototype.hide,d.prototype.toggle=function(e){this.container_.classList.contains(this.CssClasses_.IS_VISIBLE)?this.hide():this.show(e)},d.prototype.toggle=d.prototype.toggle,s.register({constructor:d,classAsString:\"MaterialMenu\",cssClass:\"mdl-js-menu\",widget:!0});var h=function(e){this.element_=e,this.init()};window.MaterialProgress=h,h.prototype.Constant_={},h.prototype.CssClasses_={INDETERMINATE_CLASS:\"mdl-progress__indeterminate\"},h.prototype.setProgress=function(e){this.element_.classList.contains(this.CssClasses_.INDETERMINATE_CLASS)||(this.progressbar_.style.width=e+\"%\")},h.prototype.setProgress=h.prototype.setProgress,h.prototype.setBuffer=function(e){this.bufferbar_.style.width=e+\"%\",this.auxbar_.style.width=100-e+\"%\"},h.prototype.setBuffer=h.prototype.setBuffer,h.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.className=\"progressbar bar bar1\",this.element_.appendChild(e),this.progressbar_=e,e=document.createElement(\"div\"),e.className=\"bufferbar bar bar2\",this.element_.appendChild(e),this.bufferbar_=e,e=document.createElement(\"div\"),e.className=\"auxbar bar bar3\",this.element_.appendChild(e),this.auxbar_=e,this.progressbar_.style.width=\"0%\",this.bufferbar_.style.width=\"100%\",this.auxbar_.style.width=\"0%\",this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:h,classAsString:\"MaterialProgress\",cssClass:\"mdl-js-progress\",widget:!0});var c=function(e){this.element_=e,this.init()};window.MaterialRadio=c,c.prototype.Constant_={TINY_TIMEOUT:.001},c.prototype.CssClasses_={IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\",IS_UPGRADED:\"is-upgraded\",JS_RADIO:\"mdl-js-radio\",RADIO_BTN:\"mdl-radio__button\",RADIO_OUTER_CIRCLE:\"mdl-radio__outer-circle\",RADIO_INNER_CIRCLE:\"mdl-radio__inner-circle\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-radio__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\"},c.prototype.onChange_=function(e){for(var t=document.getElementsByClassName(this.CssClasses_.JS_RADIO),s=0;s<t.length;s++){var i=t[s].querySelector(\".\"+this.CssClasses_.RADIO_BTN);i.getAttribute(\"name\")===this.btnElement_.getAttribute(\"name\")&&t[s].MaterialRadio.updateClasses_()}},c.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},c.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},c.prototype.onMouseup_=function(e){this.blur_()},c.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},c.prototype.blur_=function(){window.setTimeout(function(){this.btnElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},c.prototype.checkDisabled=function(){this.btnElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},c.prototype.checkDisabled=c.prototype.checkDisabled,c.prototype.checkToggleState=function(){this.btnElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},c.prototype.checkToggleState=c.prototype.checkToggleState,c.prototype.disable=function(){this.btnElement_.disabled=!0,this.updateClasses_()},c.prototype.disable=c.prototype.disable,c.prototype.enable=function(){this.btnElement_.disabled=!1,this.updateClasses_()},c.prototype.enable=c.prototype.enable,c.prototype.check=function(){this.btnElement_.checked=!0,this.updateClasses_()},c.prototype.check=c.prototype.check,c.prototype.uncheck=function(){this.btnElement_.checked=!1,this.updateClasses_()},c.prototype.uncheck=c.prototype.uncheck,c.prototype.init=function(){if(this.element_){this.btnElement_=this.element_.querySelector(\".\"+this.CssClasses_.RADIO_BTN),this.boundChangeHandler_=this.onChange_.bind(this),this.boundFocusHandler_=this.onChange_.bind(this),this.boundBlurHandler_=this.onBlur_.bind(this),this.boundMouseUpHandler_=this.onMouseup_.bind(this);var e=document.createElement(\"span\");e.classList.add(this.CssClasses_.RADIO_OUTER_CIRCLE);var t=document.createElement(\"span\");t.classList.add(this.CssClasses_.RADIO_INNER_CIRCLE),this.element_.appendChild(e),this.element_.appendChild(t);var s;if(this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),s=document.createElement(\"span\"),s.classList.add(this.CssClasses_.RIPPLE_CONTAINER),s.classList.add(this.CssClasses_.RIPPLE_EFFECT),s.classList.add(this.CssClasses_.RIPPLE_CENTER),s.addEventListener(\"mouseup\",this.boundMouseUpHandler_);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),s.appendChild(i),this.element_.appendChild(s)}this.btnElement_.addEventListener(\"change\",this.boundChangeHandler_),this.btnElement_.addEventListener(\"focus\",this.boundFocusHandler_),this.btnElement_.addEventListener(\"blur\",this.boundBlurHandler_),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler_),this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:c,classAsString:\"MaterialRadio\",cssClass:\"mdl-js-radio\",widget:!0});var p=function(e){this.element_=e,this.isIE_=window.navigator.msPointerEnabled,this.init()};window.MaterialSlider=p,p.prototype.Constant_={},p.prototype.CssClasses_={IE_CONTAINER:\"mdl-slider__ie-container\",SLIDER_CONTAINER:\"mdl-slider__container\",BACKGROUND_FLEX:\"mdl-slider__background-flex\",BACKGROUND_LOWER:\"mdl-slider__background-lower\",BACKGROUND_UPPER:\"mdl-slider__background-upper\",IS_LOWEST_VALUE:\"is-lowest-value\",IS_UPGRADED:\"is-upgraded\"},p.prototype.onInput_=function(e){this.updateValueStyles_()},p.prototype.onChange_=function(e){this.updateValueStyles_()},p.prototype.onMouseUp_=function(e){e.target.blur()},p.prototype.onContainerMouseDown_=function(e){if(e.target===this.element_.parentElement){e.preventDefault();var t=new MouseEvent(\"mousedown\",{target:e.target,buttons:e.buttons,clientX:e.clientX,clientY:this.element_.getBoundingClientRect().y});this.element_.dispatchEvent(t)}},p.prototype.updateValueStyles_=function(){var e=(this.element_.value-this.element_.min)/(this.element_.max-this.element_.min);0===e?this.element_.classList.add(this.CssClasses_.IS_LOWEST_VALUE):this.element_.classList.remove(this.CssClasses_.IS_LOWEST_VALUE),this.isIE_||(this.backgroundLower_.style.flex=e,this.backgroundLower_.style.webkitFlex=e,this.backgroundUpper_.style.flex=1-e,this.backgroundUpper_.style.webkitFlex=1-e)},p.prototype.disable=function(){this.element_.disabled=!0},p.prototype.disable=p.prototype.disable,p.prototype.enable=function(){this.element_.disabled=!1},p.prototype.enable=p.prototype.enable,p.prototype.change=function(e){\"undefined\"!=typeof e&&(this.element_.value=e),this.updateValueStyles_()},p.prototype.change=p.prototype.change,p.prototype.init=function(){if(this.element_){if(this.isIE_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.IE_CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_)}else{var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.SLIDER_CONTAINER),this.element_.parentElement.insertBefore(t,this.element_),this.element_.parentElement.removeChild(this.element_),t.appendChild(this.element_);var s=document.createElement(\"div\");s.classList.add(this.CssClasses_.BACKGROUND_FLEX),t.appendChild(s),this.backgroundLower_=document.createElement(\"div\"),this.backgroundLower_.classList.add(this.CssClasses_.BACKGROUND_LOWER),s.appendChild(this.backgroundLower_),this.backgroundUpper_=document.createElement(\"div\"),this.backgroundUpper_.classList.add(this.CssClasses_.BACKGROUND_UPPER),s.appendChild(this.backgroundUpper_)}this.boundInputHandler=this.onInput_.bind(this),this.boundChangeHandler=this.onChange_.bind(this),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.boundContainerMouseDownHandler=this.onContainerMouseDown_.bind(this),this.element_.addEventListener(\"input\",this.boundInputHandler),this.element_.addEventListener(\"change\",this.boundChangeHandler),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler),this.element_.parentElement.addEventListener(\"mousedown\",this.boundContainerMouseDownHandler),this.updateValueStyles_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},s.register({constructor:p,classAsString:\"MaterialSlider\",cssClass:\"mdl-js-slider\",widget:!0});var C=function(e){if(this.element_=e,this.textElement_=this.element_.querySelector(\".\"+this.cssClasses_.MESSAGE),this.actionElement_=this.element_.querySelector(\".\"+this.cssClasses_.ACTION),!this.textElement_)throw new Error(\"There must be a message element for a snackbar.\");if(!this.actionElement_)throw new Error(\"There must be an action element for a snackbar.\");this.active=!1,this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.queuedNotifications_=[],this.setActionHidden_(!0)};window.MaterialSnackbar=C,C.prototype.Constant_={ANIMATION_LENGTH:250},C.prototype.cssClasses_={SNACKBAR:\"mdl-snackbar\",MESSAGE:\"mdl-snackbar__text\",ACTION:\"mdl-snackbar__action\",ACTIVE:\"mdl-snackbar--active\"},C.prototype.displaySnackbar_=function(){this.element_.setAttribute(\"aria-hidden\",\"true\"),this.actionHandler_&&(this.actionElement_.textContent=this.actionText_,\nthis.actionElement_.addEventListener(\"click\",this.actionHandler_),this.setActionHidden_(!1)),this.textElement_.textContent=this.message_,this.element_.classList.add(this.cssClasses_.ACTIVE),this.element_.setAttribute(\"aria-hidden\",\"false\"),setTimeout(this.cleanup_.bind(this),this.timeout_)},C.prototype.showSnackbar=function(e){if(void 0===e)throw new Error(\"Please provide a data object with at least a message to display.\");if(void 0===e.message)throw new Error(\"Please provide a message to be displayed.\");if(e.actionHandler&&!e.actionText)throw new Error(\"Please provide action text with the handler.\");this.active?this.queuedNotifications_.push(e):(this.active=!0,this.message_=e.message,e.timeout?this.timeout_=e.timeout:this.timeout_=2750,e.actionHandler&&(this.actionHandler_=e.actionHandler),e.actionText&&(this.actionText_=e.actionText),this.displaySnackbar_())},C.prototype.showSnackbar=C.prototype.showSnackbar,C.prototype.checkQueue_=function(){this.queuedNotifications_.length>0&&this.showSnackbar(this.queuedNotifications_.shift())},C.prototype.cleanup_=function(){this.element_.classList.remove(this.cssClasses_.ACTIVE),setTimeout(function(){this.element_.setAttribute(\"aria-hidden\",\"true\"),this.textElement_.textContent=\"\",Boolean(this.actionElement_.getAttribute(\"aria-hidden\"))||(this.setActionHidden_(!0),this.actionElement_.textContent=\"\",this.actionElement_.removeEventListener(\"click\",this.actionHandler_)),this.actionHandler_=void 0,this.message_=void 0,this.actionText_=void 0,this.active=!1,this.checkQueue_()}.bind(this),this.Constant_.ANIMATION_LENGTH)},C.prototype.setActionHidden_=function(e){e?this.actionElement_.setAttribute(\"aria-hidden\",\"true\"):this.actionElement_.removeAttribute(\"aria-hidden\")},s.register({constructor:C,classAsString:\"MaterialSnackbar\",cssClass:\"mdl-js-snackbar\",widget:!0});var u=function(e){this.element_=e,this.init()};window.MaterialSpinner=u,u.prototype.Constant_={MDL_SPINNER_LAYER_COUNT:4},u.prototype.CssClasses_={MDL_SPINNER_LAYER:\"mdl-spinner__layer\",MDL_SPINNER_CIRCLE_CLIPPER:\"mdl-spinner__circle-clipper\",MDL_SPINNER_CIRCLE:\"mdl-spinner__circle\",MDL_SPINNER_GAP_PATCH:\"mdl-spinner__gap-patch\",MDL_SPINNER_LEFT:\"mdl-spinner__left\",MDL_SPINNER_RIGHT:\"mdl-spinner__right\"},u.prototype.createLayer=function(e){var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER),t.classList.add(this.CssClasses_.MDL_SPINNER_LAYER+\"-\"+e);var s=document.createElement(\"div\");s.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),s.classList.add(this.CssClasses_.MDL_SPINNER_LEFT);var i=document.createElement(\"div\");i.classList.add(this.CssClasses_.MDL_SPINNER_GAP_PATCH);var n=document.createElement(\"div\");n.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE_CLIPPER),n.classList.add(this.CssClasses_.MDL_SPINNER_RIGHT);for(var a=[s,i,n],l=0;l<a.length;l++){var o=document.createElement(\"div\");o.classList.add(this.CssClasses_.MDL_SPINNER_CIRCLE),a[l].appendChild(o)}t.appendChild(s),t.appendChild(i),t.appendChild(n),this.element_.appendChild(t)},u.prototype.createLayer=u.prototype.createLayer,u.prototype.stop=function(){this.element_.classList.remove(\"is-active\")},u.prototype.stop=u.prototype.stop,u.prototype.start=function(){this.element_.classList.add(\"is-active\")},u.prototype.start=u.prototype.start,u.prototype.init=function(){if(this.element_){for(var e=1;e<=this.Constant_.MDL_SPINNER_LAYER_COUNT;e++)this.createLayer(e);this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:u,classAsString:\"MaterialSpinner\",cssClass:\"mdl-js-spinner\",widget:!0});var E=function(e){this.element_=e,this.init()};window.MaterialSwitch=E,E.prototype.Constant_={TINY_TIMEOUT:.001},E.prototype.CssClasses_={INPUT:\"mdl-switch__input\",TRACK:\"mdl-switch__track\",THUMB:\"mdl-switch__thumb\",FOCUS_HELPER:\"mdl-switch__focus-helper\",RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE_CONTAINER:\"mdl-switch__ripple-container\",RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE:\"mdl-ripple\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_CHECKED:\"is-checked\"},E.prototype.onChange_=function(e){this.updateClasses_()},E.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},E.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},E.prototype.onMouseUp_=function(e){this.blur_()},E.prototype.updateClasses_=function(){this.checkDisabled(),this.checkToggleState()},E.prototype.blur_=function(){window.setTimeout(function(){this.inputElement_.blur()}.bind(this),this.Constant_.TINY_TIMEOUT)},E.prototype.checkDisabled=function(){this.inputElement_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},E.prototype.checkDisabled=E.prototype.checkDisabled,E.prototype.checkToggleState=function(){this.inputElement_.checked?this.element_.classList.add(this.CssClasses_.IS_CHECKED):this.element_.classList.remove(this.CssClasses_.IS_CHECKED)},E.prototype.checkToggleState=E.prototype.checkToggleState,E.prototype.disable=function(){this.inputElement_.disabled=!0,this.updateClasses_()},E.prototype.disable=E.prototype.disable,E.prototype.enable=function(){this.inputElement_.disabled=!1,this.updateClasses_()},E.prototype.enable=E.prototype.enable,E.prototype.on=function(){this.inputElement_.checked=!0,this.updateClasses_()},E.prototype.on=E.prototype.on,E.prototype.off=function(){this.inputElement_.checked=!1,this.updateClasses_()},E.prototype.off=E.prototype.off,E.prototype.init=function(){if(this.element_){this.inputElement_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT);var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.TRACK);var t=document.createElement(\"div\");t.classList.add(this.CssClasses_.THUMB);var s=document.createElement(\"span\");if(s.classList.add(this.CssClasses_.FOCUS_HELPER),t.appendChild(s),this.element_.appendChild(e),this.element_.appendChild(t),this.boundMouseUpHandler=this.onMouseUp_.bind(this),this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)){this.element_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS),this.rippleContainerElement_=document.createElement(\"span\"),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CONTAINER),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_EFFECT),this.rippleContainerElement_.classList.add(this.CssClasses_.RIPPLE_CENTER),this.rippleContainerElement_.addEventListener(\"mouseup\",this.boundMouseUpHandler);var i=document.createElement(\"span\");i.classList.add(this.CssClasses_.RIPPLE),this.rippleContainerElement_.appendChild(i),this.element_.appendChild(this.rippleContainerElement_)}this.boundChangeHandler=this.onChange_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.inputElement_.addEventListener(\"change\",this.boundChangeHandler),this.inputElement_.addEventListener(\"focus\",this.boundFocusHandler),this.inputElement_.addEventListener(\"blur\",this.boundBlurHandler),this.element_.addEventListener(\"mouseup\",this.boundMouseUpHandler),this.updateClasses_(),this.element_.classList.add(\"is-upgraded\")}},s.register({constructor:E,classAsString:\"MaterialSwitch\",cssClass:\"mdl-js-switch\",widget:!0});var m=function(e){this.element_=e,this.init()};window.MaterialTabs=m,m.prototype.Constant_={},m.prototype.CssClasses_={TAB_CLASS:\"mdl-tabs__tab\",PANEL_CLASS:\"mdl-tabs__panel\",ACTIVE_CLASS:\"is-active\",UPGRADED_CLASS:\"is-upgraded\",MDL_JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",MDL_RIPPLE_CONTAINER:\"mdl-tabs__ripple-container\",MDL_RIPPLE:\"mdl-ripple\",MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\"},m.prototype.initTabs_=function(){this.element_.classList.contains(this.CssClasses_.MDL_JS_RIPPLE_EFFECT)&&this.element_.classList.add(this.CssClasses_.MDL_JS_RIPPLE_EFFECT_IGNORE_EVENTS),this.tabs_=this.element_.querySelectorAll(\".\"+this.CssClasses_.TAB_CLASS),this.panels_=this.element_.querySelectorAll(\".\"+this.CssClasses_.PANEL_CLASS);for(var t=0;t<this.tabs_.length;t++)new e(this.tabs_[t],this);this.element_.classList.add(this.CssClasses_.UPGRADED_CLASS)},m.prototype.resetTabState_=function(){for(var e=0;e<this.tabs_.length;e++)this.tabs_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS)},m.prototype.resetPanelState_=function(){for(var e=0;e<this.panels_.length;e++)this.panels_[e].classList.remove(this.CssClasses_.ACTIVE_CLASS)},m.prototype.init=function(){this.element_&&this.initTabs_()},s.register({constructor:m,classAsString:\"MaterialTabs\",cssClass:\"mdl-js-tabs\"});var L=function(e){this.element_=e,this.maxRows=this.Constant_.NO_MAX_ROWS,this.init()};window.MaterialTextfield=L,L.prototype.Constant_={NO_MAX_ROWS:-1,MAX_ROWS_ATTRIBUTE:\"maxrows\"},L.prototype.CssClasses_={LABEL:\"mdl-textfield__label\",INPUT:\"mdl-textfield__input\",IS_DIRTY:\"is-dirty\",IS_FOCUSED:\"is-focused\",IS_DISABLED:\"is-disabled\",IS_INVALID:\"is-invalid\",IS_UPGRADED:\"is-upgraded\"},L.prototype.onKeyDown_=function(e){var t=e.target.value.split(\"\\n\").length;13===e.keyCode&&t>=this.maxRows&&e.preventDefault()},L.prototype.onFocus_=function(e){this.element_.classList.add(this.CssClasses_.IS_FOCUSED)},L.prototype.onBlur_=function(e){this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},L.prototype.onReset_=function(e){this.updateClasses_()},L.prototype.updateClasses_=function(){this.checkDisabled(),this.checkValidity(),this.checkDirty(),this.checkFocus()},L.prototype.checkDisabled=function(){this.input_.disabled?this.element_.classList.add(this.CssClasses_.IS_DISABLED):this.element_.classList.remove(this.CssClasses_.IS_DISABLED)},L.prototype.checkDisabled=L.prototype.checkDisabled,L.prototype.checkFocus=function(){Boolean(this.element_.querySelector(\":focus\"))?this.element_.classList.add(this.CssClasses_.IS_FOCUSED):this.element_.classList.remove(this.CssClasses_.IS_FOCUSED)},L.prototype.checkFocus=L.prototype.checkFocus,L.prototype.checkValidity=function(){this.input_.validity&&(this.input_.validity.valid?this.element_.classList.remove(this.CssClasses_.IS_INVALID):this.element_.classList.add(this.CssClasses_.IS_INVALID))},L.prototype.checkValidity=L.prototype.checkValidity,L.prototype.checkDirty=function(){this.input_.value&&this.input_.value.length>0?this.element_.classList.add(this.CssClasses_.IS_DIRTY):this.element_.classList.remove(this.CssClasses_.IS_DIRTY)},L.prototype.checkDirty=L.prototype.checkDirty,L.prototype.disable=function(){this.input_.disabled=!0,this.updateClasses_()},L.prototype.disable=L.prototype.disable,L.prototype.enable=function(){this.input_.disabled=!1,this.updateClasses_()},L.prototype.enable=L.prototype.enable,L.prototype.change=function(e){this.input_.value=e||\"\",this.updateClasses_()},L.prototype.change=L.prototype.change,L.prototype.init=function(){if(this.element_&&(this.label_=this.element_.querySelector(\".\"+this.CssClasses_.LABEL),this.input_=this.element_.querySelector(\".\"+this.CssClasses_.INPUT),this.input_)){this.input_.hasAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE)&&(this.maxRows=parseInt(this.input_.getAttribute(this.Constant_.MAX_ROWS_ATTRIBUTE),10),isNaN(this.maxRows)&&(this.maxRows=this.Constant_.NO_MAX_ROWS)),this.boundUpdateClassesHandler=this.updateClasses_.bind(this),this.boundFocusHandler=this.onFocus_.bind(this),this.boundBlurHandler=this.onBlur_.bind(this),this.boundResetHandler=this.onReset_.bind(this),this.input_.addEventListener(\"input\",this.boundUpdateClassesHandler),this.input_.addEventListener(\"focus\",this.boundFocusHandler),this.input_.addEventListener(\"blur\",this.boundBlurHandler),this.input_.addEventListener(\"reset\",this.boundResetHandler),this.maxRows!==this.Constant_.NO_MAX_ROWS&&(this.boundKeyDownHandler=this.onKeyDown_.bind(this),this.input_.addEventListener(\"keydown\",this.boundKeyDownHandler));var e=this.element_.classList.contains(this.CssClasses_.IS_INVALID);this.updateClasses_(),this.element_.classList.add(this.CssClasses_.IS_UPGRADED),e&&this.element_.classList.add(this.CssClasses_.IS_INVALID),this.input_.hasAttribute(\"autofocus\")&&(this.element_.focus(),this.checkFocus())}},s.register({constructor:L,classAsString:\"MaterialTextfield\",cssClass:\"mdl-js-textfield\",widget:!0});var I=function(e){this.element_=e,this.init()};window.MaterialTooltip=I,I.prototype.Constant_={},I.prototype.CssClasses_={IS_ACTIVE:\"is-active\",BOTTOM:\"mdl-tooltip--bottom\",LEFT:\"mdl-tooltip--left\",RIGHT:\"mdl-tooltip--right\",TOP:\"mdl-tooltip--top\"},I.prototype.handleMouseEnter_=function(e){var t=e.target.getBoundingClientRect(),s=t.left+t.width/2,i=t.top+t.height/2,n=-1*(this.element_.offsetWidth/2),a=-1*(this.element_.offsetHeight/2);this.element_.classList.contains(this.CssClasses_.LEFT)||this.element_.classList.contains(this.CssClasses_.RIGHT)?(s=t.width/2,0>i+a?(this.element_.style.top=0,this.element_.style.marginTop=0):(this.element_.style.top=i+\"px\",this.element_.style.marginTop=a+\"px\")):0>s+n?(this.element_.style.left=0,this.element_.style.marginLeft=0):(this.element_.style.left=s+\"px\",this.element_.style.marginLeft=n+\"px\"),this.element_.classList.contains(this.CssClasses_.TOP)?this.element_.style.top=t.top-this.element_.offsetHeight-10+\"px\":this.element_.classList.contains(this.CssClasses_.RIGHT)?this.element_.style.left=t.left+t.width+10+\"px\":this.element_.classList.contains(this.CssClasses_.LEFT)?this.element_.style.left=t.left-this.element_.offsetWidth-10+\"px\":this.element_.style.top=t.top+t.height+10+\"px\",this.element_.classList.add(this.CssClasses_.IS_ACTIVE)},I.prototype.handleMouseLeave_=function(){this.element_.classList.remove(this.CssClasses_.IS_ACTIVE)},I.prototype.init=function(){if(this.element_){var e=this.element_.getAttribute(\"for\");e&&(this.forElement_=document.getElementById(e)),this.forElement_&&(this.forElement_.hasAttribute(\"tabindex\")||this.forElement_.setAttribute(\"tabindex\",\"0\"),this.boundMouseEnterHandler=this.handleMouseEnter_.bind(this),this.boundMouseLeaveHandler=this.handleMouseLeave_.bind(this),this.forElement_.addEventListener(\"mouseenter\",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener(\"touchend\",this.boundMouseEnterHandler,!1),this.forElement_.addEventListener(\"mouseleave\",this.boundMouseLeaveHandler,!1),window.addEventListener(\"touchstart\",this.boundMouseLeaveHandler))}},s.register({constructor:I,classAsString:\"MaterialTooltip\",cssClass:\"mdl-tooltip\"});var f=function(e){this.element_=e,this.init()};window.MaterialLayout=f,f.prototype.Constant_={MAX_WIDTH:\"(max-width: 1024px)\",TAB_SCROLL_PIXELS:100,MENU_ICON:\"&#xE5D2;\",CHEVRON_LEFT:\"chevron_left\",CHEVRON_RIGHT:\"chevron_right\"},f.prototype.Keycodes_={ENTER:13,ESCAPE:27,SPACE:32},f.prototype.Mode_={STANDARD:0,SEAMED:1,WATERFALL:2,SCROLL:3},f.prototype.CssClasses_={CONTAINER:\"mdl-layout__container\",HEADER:\"mdl-layout__header\",DRAWER:\"mdl-layout__drawer\",CONTENT:\"mdl-layout__content\",DRAWER_BTN:\"mdl-layout__drawer-button\",ICON:\"material-icons\",JS_RIPPLE_EFFECT:\"mdl-js-ripple-effect\",RIPPLE_CONTAINER:\"mdl-layout__tab-ripple-container\",RIPPLE:\"mdl-ripple\",RIPPLE_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",HEADER_SEAMED:\"mdl-layout__header--seamed\",HEADER_WATERFALL:\"mdl-layout__header--waterfall\",HEADER_SCROLL:\"mdl-layout__header--scroll\",FIXED_HEADER:\"mdl-layout--fixed-header\",OBFUSCATOR:\"mdl-layout__obfuscator\",TAB_BAR:\"mdl-layout__tab-bar\",TAB_CONTAINER:\"mdl-layout__tab-bar-container\",TAB:\"mdl-layout__tab\",TAB_BAR_BUTTON:\"mdl-layout__tab-bar-button\",TAB_BAR_LEFT_BUTTON:\"mdl-layout__tab-bar-left-button\",TAB_BAR_RIGHT_BUTTON:\"mdl-layout__tab-bar-right-button\",PANEL:\"mdl-layout__tab-panel\",HAS_DRAWER:\"has-drawer\",HAS_TABS:\"has-tabs\",HAS_SCROLLING_HEADER:\"has-scrolling-header\",CASTING_SHADOW:\"is-casting-shadow\",IS_COMPACT:\"is-compact\",IS_SMALL_SCREEN:\"is-small-screen\",IS_DRAWER_OPEN:\"is-visible\",IS_ACTIVE:\"is-active\",IS_UPGRADED:\"is-upgraded\",IS_ANIMATING:\"is-animating\",ON_LARGE_SCREEN:\"mdl-layout--large-screen-only\",ON_SMALL_SCREEN:\"mdl-layout--small-screen-only\"},f.prototype.contentScrollHandler_=function(){this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)||(this.content_.scrollTop>0&&!this.header_.classList.contains(this.CssClasses_.IS_COMPACT)?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.header_.classList.add(this.CssClasses_.IS_COMPACT),this.header_.classList.add(this.CssClasses_.IS_ANIMATING)):this.content_.scrollTop<=0&&this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.header_.classList.remove(this.CssClasses_.IS_COMPACT),this.header_.classList.add(this.CssClasses_.IS_ANIMATING)))},f.prototype.keyboardEventHandler_=function(e){e.keyCode===this.Keycodes_.ESCAPE&&this.toggleDrawer()},f.prototype.screenSizeHandler_=function(){this.screenSizeMediaQuery_.matches?this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN):(this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN),this.drawer_&&(this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN)))},f.prototype.drawerToggleHandler_=function(e){if(e&&\"keydown\"===e.type){if(e.keyCode!==this.Keycodes_.SPACE&&e.keyCode!==this.Keycodes_.ENTER)return;e.preventDefault()}this.toggleDrawer()},f.prototype.headerTransitionEndHandler_=function(){this.header_.classList.remove(this.CssClasses_.IS_ANIMATING)},f.prototype.headerClickHandler_=function(){this.header_.classList.contains(this.CssClasses_.IS_COMPACT)&&(this.header_.classList.remove(this.CssClasses_.IS_COMPACT),this.header_.classList.add(this.CssClasses_.IS_ANIMATING))},f.prototype.resetTabState_=function(e){for(var t=0;t<e.length;t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE)},f.prototype.resetPanelState_=function(e){for(var t=0;t<e.length;t++)e[t].classList.remove(this.CssClasses_.IS_ACTIVE)},f.prototype.toggleDrawer=function(){var e=this.element_.querySelector(\".\"+this.CssClasses_.DRAWER_BTN);this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN),this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)?(this.drawer_.setAttribute(\"aria-hidden\",\"false\"),e.setAttribute(\"aria-expanded\",\"true\")):(this.drawer_.setAttribute(\"aria-hidden\",\"true\"),e.setAttribute(\"aria-expanded\",\"false\"))},f.prototype.toggleDrawer=f.prototype.toggleDrawer,f.prototype.init=function(){if(this.element_){var e=document.createElement(\"div\");e.classList.add(this.CssClasses_.CONTAINER),this.element_.parentElement.insertBefore(e,this.element_),this.element_.parentElement.removeChild(this.element_),e.appendChild(this.element_);for(var s=this.element_.childNodes,i=s.length,n=0;i>n;n++){var a=s[n];a.classList&&a.classList.contains(this.CssClasses_.HEADER)&&(this.header_=a),a.classList&&a.classList.contains(this.CssClasses_.DRAWER)&&(this.drawer_=a),a.classList&&a.classList.contains(this.CssClasses_.CONTENT)&&(this.content_=a)}window.addEventListener(\"pageshow\",function(e){e.persisted&&(this.element_.style.overflowY=\"hidden\",requestAnimationFrame(function(){this.element_.style.overflowY=\"\"}.bind(this)))}.bind(this),!1),this.header_&&(this.tabBar_=this.header_.querySelector(\".\"+this.CssClasses_.TAB_BAR));var l=this.Mode_.STANDARD;if(this.header_&&(this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)?l=this.Mode_.SEAMED:this.header_.classList.contains(this.CssClasses_.HEADER_WATERFALL)?(l=this.Mode_.WATERFALL,this.header_.addEventListener(\"transitionend\",this.headerTransitionEndHandler_.bind(this)),this.header_.addEventListener(\"click\",this.headerClickHandler_.bind(this))):this.header_.classList.contains(this.CssClasses_.HEADER_SCROLL)&&(l=this.Mode_.SCROLL,e.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER)),l===this.Mode_.STANDARD?(this.header_.classList.add(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW)):l===this.Mode_.SEAMED||l===this.Mode_.SCROLL?(this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW),this.tabBar_&&this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW)):l===this.Mode_.WATERFALL&&(this.content_.addEventListener(\"scroll\",this.contentScrollHandler_.bind(this)),this.contentScrollHandler_())),this.drawer_){var o=this.element_.querySelector(\".\"+this.CssClasses_.DRAWER_BTN);if(!o){o=document.createElement(\"div\"),o.setAttribute(\"aria-expanded\",\"false\"),o.setAttribute(\"role\",\"button\"),o.setAttribute(\"tabindex\",\"0\"),o.classList.add(this.CssClasses_.DRAWER_BTN);var r=document.createElement(\"i\");r.classList.add(this.CssClasses_.ICON),r.innerHTML=this.Constant_.MENU_ICON,o.appendChild(r)}this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)?o.classList.add(this.CssClasses_.ON_LARGE_SCREEN):this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)&&o.classList.add(this.CssClasses_.ON_SMALL_SCREEN),o.addEventListener(\"click\",this.drawerToggleHandler_.bind(this)),o.addEventListener(\"keydown\",this.drawerToggleHandler_.bind(this)),this.element_.classList.add(this.CssClasses_.HAS_DRAWER),this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)?this.header_.insertBefore(o,this.header_.firstChild):this.element_.insertBefore(o,this.content_);var _=document.createElement(\"div\");_.classList.add(this.CssClasses_.OBFUSCATOR),this.element_.appendChild(_),_.addEventListener(\"click\",this.drawerToggleHandler_.bind(this)),this.obfuscator_=_,this.drawer_.addEventListener(\"keydown\",this.keyboardEventHandler_.bind(this)),this.drawer_.setAttribute(\"aria-hidden\",\"true\")}if(this.screenSizeMediaQuery_=window.matchMedia(this.Constant_.MAX_WIDTH),this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this)),this.screenSizeHandler_(),this.header_&&this.tabBar_){this.element_.classList.add(this.CssClasses_.HAS_TABS);var d=document.createElement(\"div\");d.classList.add(this.CssClasses_.TAB_CONTAINER),this.header_.insertBefore(d,this.tabBar_),this.header_.removeChild(this.tabBar_);var h=document.createElement(\"div\");h.classList.add(this.CssClasses_.TAB_BAR_BUTTON),h.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);var c=document.createElement(\"i\");c.classList.add(this.CssClasses_.ICON),c.textContent=this.Constant_.CHEVRON_LEFT,h.appendChild(c),h.addEventListener(\"click\",function(){this.tabBar_.scrollLeft-=this.Constant_.TAB_SCROLL_PIXELS}.bind(this));var p=document.createElement(\"div\");p.classList.add(this.CssClasses_.TAB_BAR_BUTTON),p.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);var C=document.createElement(\"i\");C.classList.add(this.CssClasses_.ICON),C.textContent=this.Constant_.CHEVRON_RIGHT,p.appendChild(C),p.addEventListener(\"click\",function(){this.tabBar_.scrollLeft+=this.Constant_.TAB_SCROLL_PIXELS}.bind(this)),d.appendChild(h),d.appendChild(this.tabBar_),d.appendChild(p);var u=function(){this.tabBar_.scrollLeft>0?h.classList.add(this.CssClasses_.IS_ACTIVE):h.classList.remove(this.CssClasses_.IS_ACTIVE),this.tabBar_.scrollLeft<this.tabBar_.scrollWidth-this.tabBar_.offsetWidth?p.classList.add(this.CssClasses_.IS_ACTIVE):p.classList.remove(this.CssClasses_.IS_ACTIVE)}.bind(this);this.tabBar_.addEventListener(\"scroll\",u),u(),this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)&&this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);for(var E=this.tabBar_.querySelectorAll(\".\"+this.CssClasses_.TAB),m=this.content_.querySelectorAll(\".\"+this.CssClasses_.PANEL),L=0;L<E.length;L++)new t(E[L],E,m,this)}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}},window.MaterialLayoutTab=t,s.register({constructor:f,classAsString:\"MaterialLayout\",cssClass:\"mdl-js-layout\"});var b=function(e){this.element_=e,this.init()};window.MaterialDataTable=b,b.prototype.Constant_={},b.prototype.CssClasses_={DATA_TABLE:\"mdl-data-table\",SELECTABLE:\"mdl-data-table--selectable\",SELECT_ELEMENT:\"mdl-data-table__select\",IS_SELECTED:\"is-selected\",IS_UPGRADED:\"is-upgraded\"},b.prototype.selectRow_=function(e,t,s){return t?function(){e.checked?t.classList.add(this.CssClasses_.IS_SELECTED):t.classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):s?function(){var t,i;if(e.checked)for(t=0;t<s.length;t++)i=s[t].querySelector(\"td\").querySelector(\".mdl-checkbox\"),i.MaterialCheckbox.check(),s[t].classList.add(this.CssClasses_.IS_SELECTED);else for(t=0;t<s.length;t++)i=s[t].querySelector(\"td\").querySelector(\".mdl-checkbox\"),i.MaterialCheckbox.uncheck(),s[t].classList.remove(this.CssClasses_.IS_SELECTED)}.bind(this):void 0},b.prototype.createCheckbox_=function(e,t){var i=document.createElement(\"label\"),n=[\"mdl-checkbox\",\"mdl-js-checkbox\",\"mdl-js-ripple-effect\",this.CssClasses_.SELECT_ELEMENT];i.className=n.join(\" \");var a=document.createElement(\"input\");return a.type=\"checkbox\",a.classList.add(\"mdl-checkbox__input\"),e?(a.checked=e.classList.contains(this.CssClasses_.IS_SELECTED),a.addEventListener(\"change\",this.selectRow_(a,e))):t&&a.addEventListener(\"change\",this.selectRow_(a,null,t)),i.appendChild(a),s.upgradeElement(i,\"MaterialCheckbox\"),i},b.prototype.init=function(){if(this.element_){var e=this.element_.querySelector(\"th\"),t=Array.prototype.slice.call(this.element_.querySelectorAll(\"tbody tr\")),s=Array.prototype.slice.call(this.element_.querySelectorAll(\"tfoot tr\")),i=t.concat(s);if(this.element_.classList.contains(this.CssClasses_.SELECTABLE)){var n=document.createElement(\"th\"),a=this.createCheckbox_(null,i);n.appendChild(a),e.parentElement.insertBefore(n,e);for(var l=0;l<i.length;l++){var o=i[l].querySelector(\"td\");if(o){var r=document.createElement(\"td\");if(\"TBODY\"===i[l].parentNode.nodeName.toUpperCase()){var _=this.createCheckbox_(i[l]);r.appendChild(_)}i[l].insertBefore(r,o)}}this.element_.classList.add(this.CssClasses_.IS_UPGRADED)}}},s.register({constructor:b,classAsString:\"MaterialDataTable\",cssClass:\"mdl-js-data-table\"});var y=function(e){this.element_=e,this.init()};window.MaterialRipple=y,y.prototype.Constant_={INITIAL_SCALE:\"scale(0.0001, 0.0001)\",INITIAL_SIZE:\"1px\",INITIAL_OPACITY:\"0.4\",FINAL_OPACITY:\"0\",FINAL_SCALE:\"\"},y.prototype.CssClasses_={RIPPLE_CENTER:\"mdl-ripple--center\",RIPPLE_EFFECT_IGNORE_EVENTS:\"mdl-js-ripple-effect--ignore-events\",RIPPLE:\"mdl-ripple\",IS_ANIMATING:\"is-animating\",IS_VISIBLE:\"is-visible\"},y.prototype.downHandler_=function(e){if(!this.rippleElement_.style.width&&!this.rippleElement_.style.height){var t=this.element_.getBoundingClientRect();this.boundHeight=t.height,this.boundWidth=t.width,this.rippleSize_=2*Math.sqrt(t.width*t.width+t.height*t.height)+2,this.rippleElement_.style.width=this.rippleSize_+\"px\",this.rippleElement_.style.height=this.rippleSize_+\"px\"}if(this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE),\"mousedown\"===e.type&&this.ignoringMouseDown_)this.ignoringMouseDown_=!1;else{\"touchstart\"===e.type&&(this.ignoringMouseDown_=!0);var s=this.getFrameCount();if(s>0)return;this.setFrameCount(1);var i,n,a=e.currentTarget.getBoundingClientRect();if(0===e.clientX&&0===e.clientY)i=Math.round(a.width/2),n=Math.round(a.height/2);else{var l=e.clientX?e.clientX:e.touches[0].clientX,o=e.clientY?e.clientY:e.touches[0].clientY;i=Math.round(l-a.left),n=Math.round(o-a.top)}this.setRippleXY(i,n),this.setRippleStyles(!0),window.requestAnimationFrame(this.animFrameHandler.bind(this))}},y.prototype.upHandler_=function(e){e&&2!==e.detail&&window.setTimeout(function(){this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE)}.bind(this),0)},y.prototype.init=function(){if(this.element_){var e=this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)||(this.rippleElement_=this.element_.querySelector(\".\"+this.CssClasses_.RIPPLE),this.frameCount_=0,this.rippleSize_=0,this.x_=0,this.y_=0,this.ignoringMouseDown_=!1,this.boundDownHandler=this.downHandler_.bind(this),this.element_.addEventListener(\"mousedown\",this.boundDownHandler),this.element_.addEventListener(\"touchstart\",this.boundDownHandler),this.boundUpHandler=this.upHandler_.bind(this),this.element_.addEventListener(\"mouseup\",this.boundUpHandler),this.element_.addEventListener(\"mouseleave\",this.boundUpHandler),this.element_.addEventListener(\"touchend\",this.boundUpHandler),this.element_.addEventListener(\"blur\",this.boundUpHandler),this.getFrameCount=function(){return this.frameCount_},this.setFrameCount=function(e){this.frameCount_=e},this.getRippleElement=function(){return this.rippleElement_},this.setRippleXY=function(e,t){this.x_=e,this.y_=t},this.setRippleStyles=function(t){if(null!==this.rippleElement_){var s,i,n,a=\"translate(\"+this.x_+\"px, \"+this.y_+\"px)\";t?(i=this.Constant_.INITIAL_SCALE,n=this.Constant_.INITIAL_SIZE):(i=this.Constant_.FINAL_SCALE,n=this.rippleSize_+\"px\",e&&(a=\"translate(\"+this.boundWidth/2+\"px, \"+this.boundHeight/2+\"px)\")),s=\"translate(-50%, -50%) \"+a+i,this.rippleElement_.style.webkitTransform=s,this.rippleElement_.style.msTransform=s,this.rippleElement_.style.transform=s,t?this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING):this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING)}},this.animFrameHandler=function(){this.frameCount_-- >0?window.requestAnimationFrame(this.animFrameHandler.bind(this)):this.setRippleStyles(!1)})}},s.register({constructor:y,classAsString:\"MaterialRipple\",cssClass:\"mdl-js-ripple-effect\",widget:!1})}();\n//# sourceMappingURL=material.min.js.map\n"],"sourceRoot":"/source/"}