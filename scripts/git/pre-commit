#!/bin/bash
################################################################################
#
# Bash PHP Coding Standards Fixer
#
# This will prevent a commit if the tool has made changes to the files. This
# allows a develop to look at the diff and make changes before doing the
# commit.
#
# Exit 0 if no errors found
# Exit 1 if errors were found
#
# Requires
# - php#
# Arguments
# - Nonq.w-,e≈ì
#
###########################################################################q.w-,e

# Plugin title
title="PHP Code Fixer"

# Possible command names of this tool
local_command="php-cs-fixer.phar"
vendor_command="vendor/bin/php-cs-fixer"
global_command="php-cs-fixer"

# Print a welcome and locate the exec for this tool
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $DIR/helpers/colors.sh
source $DIR/helpers/formatters.sh
source $DIR/helpers/welcome.sh
source $DIR/helpers/locate.sh

# Get modified files, staged for commit
declare -a STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep ".php\{0,1\}$")

if [[ "$STAGED_FILES" = "" ]]; then
  exit 0
fi

printf '%s\n' "${STAGED_FILES}"

args="--show-progress=dots --path-mode=override"
PHP_ERRORS_FOUND=false
error_message=""

# Run the command on each file
for FILE in "${STAGED_FILES[@]}"
do
    if [[ ${FILE} == *"resources/views/"* ]]; then
        echo "$exec_command fix $PATH --config=.php_cs_views.php $args"
        ${exec_command} fix ${FILE} --config=.php_cs_views.php ${args}
        git add ${FILE}
    elif [[ ${FILE} == *".php"* ]]; then
        echo "$exec_command fix $PATH --config=.php_cs.dist $args"
        ${exec_command} fix ${FILE} --config=.php_cs.dist ${args}
        git add ${FILE}
    fi
done;

# There is currently debate about exit codes in php-cs-fixer
# https://github.com/FriendsOfPHP/PHP-CS-Fixer/issues/1211
if [ "$PHP_ERRORS_FOUND" = true ]; then
    echo -en "\n${undred}${title} updated the following files:${txtrst}\n"
    echo -en "\n${error_message}"
    echo -en "\n${txtwht}${bakred}Please review the changes above. If you're happy, please commit and push.${txtrst}\n"
    exit 1
fi

echo "${txtgrn} All good! üòç You may proceed to committing/pushing your code.${txtrst} \n"
exit 0